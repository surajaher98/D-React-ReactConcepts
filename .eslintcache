[{"D:\\React\\ReactConcepts\\src\\index.js":"1","D:\\React\\ReactConcepts\\src\\App.js":"2","D:\\React\\ReactConcepts\\src\\reportWebVitals.js":"3","D:\\React\\ReactConcepts\\src\\component\\login\\LoginComponent.js":"4","D:\\React\\ReactConcepts\\src\\component\\contextAPI\\EventContext.js":"5","D:\\React\\ReactConcepts\\src\\component\\header\\HeaderComponent.js":"6","D:\\React\\ReactConcepts\\src\\component\\CommonComponents\\NotificationSnackbars.js":"7","D:\\React\\ReactConcepts\\src\\component\\signup\\signupComponent.js":"8","D:\\React\\ReactConcepts\\src\\component\\pageNotFound\\pageNotFoundComponent.js":"9","D:\\React\\ReactConcepts\\src\\component\\ErrorBoundary.js":"10","D:\\React\\ReactConcepts\\src\\component\\ViewUsers\\viewUsersComponent.js":"11","D:\\React\\ReactConcepts\\src\\component\\sportify\\sportifyComponent.js":"12","D:\\React\\ReactConcepts\\src\\Constants\\endPoints.js":"13","D:\\React\\ReactConcepts\\src\\component\\SongDetails\\songDetailCard.js":"14","D:\\React\\ReactConcepts\\src\\component\\Categories\\categoriesComponent.js":"15","D:\\React\\ReactConcepts\\src\\component\\music\\musicComponent.js":"16","D:\\React\\ReactConcepts\\src\\component\\playLists\\playListComponent.js":"17","D:\\React\\ReactConcepts\\src\\component\\SongsList\\SongsListComponent.js":"18","D:\\React\\ReactConcepts\\src\\component\\searchBaar\\searchBtnComponent.js":"19"},{"size":497,"mtime":1608519855211,"results":"20","hashOfConfig":"21"},{"size":2470,"mtime":1608904920219,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":4274,"mtime":1608882066077,"results":"24","hashOfConfig":"21"},{"size":2844,"mtime":1608728886763,"results":"25","hashOfConfig":"21"},{"size":10134,"mtime":1608882265859,"results":"26","hashOfConfig":"21"},{"size":1274,"mtime":1608087492789,"results":"27","hashOfConfig":"21"},{"size":8580,"mtime":1608882423013,"results":"28","hashOfConfig":"21"},{"size":191,"mtime":1608262991352,"results":"29","hashOfConfig":"21"},{"size":663,"mtime":1608390912378,"results":"30","hashOfConfig":"21"},{"size":13618,"mtime":1608528034754,"results":"31","hashOfConfig":"21"},{"size":10520,"mtime":1608915849596,"results":"32","hashOfConfig":"21"},{"size":719,"mtime":1609176567482,"results":"33","hashOfConfig":"21"},{"size":1779,"mtime":1608877604405,"results":"34","hashOfConfig":"21"},{"size":4654,"mtime":1609174088164,"results":"35","hashOfConfig":"21"},{"size":16008,"mtime":1609179607860,"results":"36","hashOfConfig":"21"},{"size":4121,"mtime":1609133706437,"results":"37","hashOfConfig":"21"},{"size":6316,"mtime":1609179530473,"results":"38","hashOfConfig":"21"},{"size":4523,"mtime":1609137376457,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ldpxiq",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},"D:\\React\\ReactConcepts\\src\\index.js",[],["90","91"],"D:\\React\\ReactConcepts\\src\\App.js",["92","93"],"import './App.css';\nimport HeaderComponent from './component/header/HeaderComponent';\nimport LoginComponent from './component/login/LoginComponent';\nimport { EventContextProvider } from './component/contextAPI/EventContext';\nimport PageNotFoundComponent from './component/pageNotFound/pageNotFoundComponent';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport SignupComponent from './component/signup/signupComponent';\nimport { Container } from '@material-ui/core';\nimport ErrorBoundary from './component/ErrorBoundary';\nimport ViewUsersComponent from './component/ViewUsers/viewUsersComponent';\nimport SportifyComponent from './component/sportify/sportifyComponent';\nimport MusicComponent from './component/music/musicComponent';\nimport { useState } from 'react';\n\nfunction App() {\n  const [searchValue, setSearchValue] = useState('');\n  // code for subling component communication\n\n  const searchHandler = (value) => {\n    setSearchValue(value);\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <EventContextProvider>\n          <ErrorBoundary>\n            <HeaderComponent searchValue={searchValue} searchHandler={searchHandler} />\n          </ErrorBoundary>\n          <Container maxWidth=\"lg\">\n            <Switch>\n              <Route path=\"/signup\">\n                <ErrorBoundary>\n                  <SignupComponent />\n                </ErrorBoundary>\n              </Route>\n              <Route path=\"/login\">\n                <ErrorBoundary>\n                  <LoginComponent />\n                </ErrorBoundary>\n              </Route>\n              <Route\n                exact\n                path=\"/viewUsers\">\n                <ErrorBoundary>\n                  <ViewUsersComponent searchValue={searchValue} />\n                </ErrorBoundary>\n              </Route>\n              <Route\n                exact\n                path=\"/sportify\">\n                <ErrorBoundary>\n                  {/* <SportifyComponent/> */}\n                  <MusicComponent />\n                </ErrorBoundary>\n              </Route>\n              <Route\n                exact\n                path=\"/\">\n                <ErrorBoundary>\n                  <LoginComponent />\n                </ErrorBoundary>\n              </Route>\n              <Route component={PageNotFoundComponent} />\n            </Switch>\n          </Container>\n        </EventContextProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\React\\ReactConcepts\\src\\reportWebVitals.js",[],"D:\\React\\ReactConcepts\\src\\component\\login\\LoginComponent.js",["94","95","96","97","98","99","100"],"import './LoginComponent.css';\r\nimport React, { useContext, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { EventContext } from './../contextAPI/EventContext';\r\n\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '40ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst validateForm = errors => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(val => val.length > 0 && (valid = false));\r\n    return valid;\r\n};\r\n\r\nfunction LoginComponent() {\r\n    const classes = useStyles();\r\n    const [credentials, setCredentials] = useState({ UserName: '', Password: '' });\r\n    const [userNameError, setUserNameError] = useState({});\r\n    const [passwordError, setPasswordError] = useState({});\r\n\r\n    const { loginUserData, setloginUserData, users, addUser, handleClick, handleClose } = useContext(EventContext);\r\n\r\n    const checkFormValidation = () => {\r\n        const userNameErr = {};\r\n        const passwordErr = {};\r\n        let isValid = true;\r\n        if (!credentials.UserName) {\r\n            userNameErr.required = \"Username is required\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (credentials.UserName.trim().length < 2 || credentials.UserName.trim().length > 5) {\r\n            userNameErr.LengthError = \"Username should be between length 2 and 5 characters\";\r\n            isValid = false;\r\n        }\r\n        if (!credentials.UserName.trim().includes('@')) {\r\n            userNameErr.atTheRateError = \"Username should be contain @\";\r\n            isValid = false;\r\n        }\r\n        if (!credentials.Password) {\r\n            passwordErr.required = \"Password is required\";\r\n            isValid = false;\r\n        }\r\n        setUserNameError(userNameErr);\r\n        setPasswordError(passwordErr);\r\n        return isValid;\r\n    }\r\n\r\n    const submit = () => {\r\n        const valid = checkFormValidation();\r\n        if (!valid) {\r\n            return;\r\n        }\r\n        let result = _.find((users), (user) => {\r\n            if (user.userName == credentials.UserName && user.password == credentials.Password) {\r\n                return true;\r\n            }\r\n        });\r\n        if (result != undefined) {\r\n            setloginUserData({ id: result.id, firstName: result.firstName, lastName: result.lastName })\r\n            localStorage.setItem('currentUser', JSON.stringify(result));\r\n            handleClick(true, 'Success');\r\n        } else {\r\n            handleClick(false, 'Authentication failed Please try again');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        if (e.target.id === 'UserName') {\r\n            setCredentials({ ...credentials, UserName: e.target.value });\r\n        }\r\n        if (e.target.id === 'Password') {\r\n            setCredentials({ ...credentials, Password: e.target.value });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='border'>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField id=\"UserName\" label=\"UserName\" variant=\"outlined\" value={credentials.UserName} onChange={handleInputChange}\r\n                />\r\n                {\r\n                    Object.keys(userNameError).map(key => {\r\n                        return <Alert severity=\"error\" className='validationError' key={userNameError[key]}>{userNameError[key]}</Alert>\r\n                    })\r\n                }\r\n                <br />\r\n\r\n                <TextField id=\"Password\" label=\"Password\" variant=\"outlined\" value={credentials.Password} onChange={handleInputChange} />\r\n                {\r\n                    Object.keys(passwordError).map(key => {\r\n                        return <Alert severity=\"error\" className='validationError' key={passwordError[key]}>{passwordError[key]}</Alert>\r\n                    })\r\n                }\r\n                <br />\r\n                <Button variant=\"contained\" className='loginbtn' color=\"primary\" onClick={submit}>\r\n                    Login\r\n</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default LoginComponent;\r\n","D:\\React\\ReactConcepts\\src\\component\\contextAPI\\EventContext.js",["101","102"],"import React, { useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { createContext, useState } from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport const EventContext = createContext();\r\n\r\nexport const EventContextProvider = ({ children }) => {\r\n\r\n    const [loginUserData, setloginUserData] = useState({ id: '', firstName: '', lastName: '' });\r\n    const [message, setMessage] = useState('');\r\n    const [users, addUser] = useState([\r\n        {\r\n            \"id\": 1,\r\n            \"firstName\": \"Vinay\",\r\n            \"lastName\": \"Revar\",\r\n            \"userName\": \"vinay@123\",\r\n            \"password\": \"123\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"firstName\": \"Roshan\",\r\n            \"lastName\": \"Shinde\",\r\n            \"userName\": \"roshan@123\",\r\n            \"password\": \"123\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"firstName\": \"Akash\",\r\n            \"lastName\": \"Kalewar\",\r\n            \"userName\": \"akash@123\",\r\n            \"password\": \"123\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"firstName\": \"Ajay\",\r\n            \"lastName\": \"Shelar\",\r\n            \"userName\": \"ajay@123\",\r\n            \"password\": \"123\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"firstName\": \"Test\",\r\n            \"lastName\": \"Test\",\r\n            \"userName\": \"abc@\",\r\n            \"password\": \"123\"\r\n        },\r\n    ]);\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [toasterSeverity, SetToasterSeverity] = useState(false);\r\n\r\n    const handleClick = (seretity, message) => {\r\n        SetToasterSeverity(seretity);\r\n        setMessage(message);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <Snackbar open={open} autoHideDuration={20000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity={toasterSeverity ? 'success' : 'error'}>\r\n                        {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n            <EventContext.Provider value={{ loginUserData, setloginUserData, users, addUser, handleClick, handleClose }}>\r\n                {children}\r\n            </EventContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n","D:\\React\\ReactConcepts\\src\\component\\header\\HeaderComponent.js",["103","104","105","106","107"],"import './HeaderComponent.css';\r\nimport React, { useContext } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { EventContext } from '../contextAPI/EventContext';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport SignupComponent from '../signup/signupComponent';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function HeaderComponent(prop) {\r\n    const { loginUserData } = useContext(EventContext);\r\n    const preventDefault = (event) => event.preventDefault();\r\n\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={11} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <div className='headerSection'>\r\n            <div className={classes.grow}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                            CRUD\r\n          </Typography>\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                value={prop.searchValue}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                                onChange={(e) => prop.searchHandler(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.grow} />\r\n                        <div>\r\n                            <Typography className={classes.root}>\r\n                                <Link to=\"/signup\" >\r\n                                    Signup\r\n      </Link>\r\n                                <Link to=\"/login\" >\r\n                                    Login\r\n                            </Link>\r\n                                <Link to=\"/viewUsers\" >\r\n                                    View\r\n                            </Link>\r\n                                <Link to=\"/sportify\" >\r\n                                    Sportify\r\n                            </Link>\r\n                            </Typography>\r\n                        </div>\r\n                        <div className={classes.sectionDesktop}>\r\n                            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                <Badge badgeContent={4} color=\"secondary\">\r\n                                    <MailIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={17} color=\"secondary\">\r\n                                    <NotificationsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <div className=\"userNameText\">\r\n                                {loginUserData.firstName} {loginUserData.lastName}\r\n                            </div>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className={classes.sectionMobile}>\r\n                            <IconButton\r\n                                aria-label=\"show more\"\r\n                                aria-controls={mobileMenuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMobileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <MoreIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {renderMobileMenu}\r\n                {renderMenu}\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\React\\ReactConcepts\\src\\component\\CommonComponents\\NotificationSnackbars.js",["108","109"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function NotificationSnackbars() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        debugger\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    This is a success message!\r\n        </Alert>\r\n            </Snackbar>\r\n            <Alert severity=\"error\">This is an error message!</Alert>\r\n        </div>\r\n    );\r\n}",["110","111"],"D:\\React\\ReactConcepts\\src\\component\\signup\\signupComponent.js",["112","113","114","115","116"],"import React, { useContext, useState } from 'react';\r\nimport './signupComponent.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { EventContext } from '../contextAPI/EventContext';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport moment from 'moment';\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         '& > *': {\r\n//             margin: theme.spacing(1),\r\n//             width: '25ch',\r\n//         },\r\n//     },\r\n// }));\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '40ch',\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\nconst SignupComponent = () => {\r\n    const classes = useStyles();\r\n    const [firstName, setFirstName] = useState({ value: '', error: {} });\r\n    const [lastName, setLastName] = useState({ value: '', error: {} });\r\n    const [userName, setUserName] = useState({ value: '', error: {} });\r\n    const [password, setPassword] = useState({ value: '', error: {} });\r\n    const [openDatePicker, setOpenDatePicker] = useState(false);\r\n\r\n    const [DOB, setDOB] = React.useState(new Date());\r\n    const [state, setState] = React.useState({ age: '', name: '' });\r\n    const [stateList, setStateList] = useState([\r\n        {\r\n            \"code\": \"maha\",\r\n            \"description\": \"Mahatashtra\"\r\n        },\r\n        {\r\n            \"code\": \"up\",\r\n            \"description\": \"Uttar Predesh\"\r\n        }\r\n        , {\r\n            \"code\": \"mp\",\r\n            \"description\": \"Madhya Pradesh\"\r\n        },\r\n        {\r\n            \"code\": \"kar\",\r\n            \"description\": \"Karnataka\"\r\n        },\r\n        {\r\n            \"code\": \"ban\",\r\n            \"description\": \"Banglore\"\r\n        }\r\n    ]);\r\n\r\n    const handleChange = (e) => {\r\n        setState({ code: e.target.value });\r\n    };\r\n\r\n    const handleDateChange = (date) => {\r\n        setDOB(date);\r\n        setOpenDatePicker(false);\r\n\r\n    };\r\n\r\n    const { users, addUser } = useContext(EventContext);\r\n\r\n    const submit = () => {\r\n        const isValid = checkFormValidation();\r\n        if (!isValid) {\r\n            return;\r\n        }\r\n        const newUser = {\r\n            id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\r\n            firstName: firstName.value,\r\n            lastName: lastName.value,\r\n            userName: userName.value,\r\n            passwor: password.value\r\n        }\r\n        addUser([...users, newUser]);\r\n\r\n    }\r\n\r\n    const checkFormValidation = () => {\r\n        const firstNameErr = {};\r\n        const lastNameErr = {};\r\n        let isValid = true;\r\n        if (!firstName.value.length > 0) {\r\n            firstNameErr.require = 'first name is required';\r\n            isValid = false;\r\n        }\r\n        if (firstName.value.length < 2) {\r\n            firstNameErr.len = 'first name should be greater than 2 characters';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!lastName.value.length > 0) {\r\n            lastNameErr.require = 'last name is required';\r\n            isValid = false;\r\n        }\r\n\r\n        if (lastName.value.includes(firstName.value)) {\r\n            lastNameErr.require = 'last name should not containe first name';\r\n            isValid = false;\r\n        }\r\n\r\n        setFirstName({ value: firstName.value, error: firstNameErr });\r\n        setLastName({ value: lastName.value, error: lastNameErr });\r\n        return isValid;\r\n    }\r\n    const handleFNameChange = (event) => {\r\n        const { id, value } = event.target;\r\n        switch (id) {\r\n            case 'fname':\r\n                setFirstName({ value: value, error: firstName.error });\r\n                break;\r\n            case 'lname':\r\n                setLastName({ value: value, error: lastName.error });\r\n                break;\r\n            case 'userName':\r\n                setUserName({ value: value, error: userName.error });\r\n                break;\r\n            case 'password':\r\n                setPassword({ value: value, error: password.error });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const getValidationMessages = (errorObj) => {\r\n        return (\r\n            <div>\r\n                {\r\n                    Object.keys(errorObj).map(key => {\r\n                        return <Alert key={errorObj[key]} severity=\"error\">{errorObj[key]}</Alert>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    const handleKeypress = (e) => {\r\n        e.preventDefault();\r\n        return false\r\n    }\r\n    const onDateInputClick = () => {\r\n        setOpenDatePicker(true);\r\n    }\r\n\r\n    return (\r\n        <div className='signupSection'>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n                <TextField className={'inputField'} label=\"First Name\" id={'fname'} value={firstName.value} onChange={(event) => handleFNameChange(event)} variant=\"outlined\" />\r\n                {\r\n                    getValidationMessages(firstName.error)\r\n                }\r\n                <TextField className={'inputField'} label=\"Last Name\" id={'lname'} value={lastName.value} onChange={(event) => handleFNameChange(event)} variant=\"outlined\" />\r\n                {\r\n                    getValidationMessages(lastName.error)\r\n                }\r\n                <TextField className={'inputField'} label=\"User Name\" id={'userName'} value={userName.value} onChange={(event) => handleFNameChange(event)} variant=\"outlined\" />\r\n                {\r\n\r\n                }\r\n                <TextField className={'inputField'} label=\"Password\" id={'password'} value={password.value} onChange={(event) => handleFNameChange(event)} variant=\"outlined\" />\r\n                {\r\n\r\n                }\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            label=\"Select Date of Birth\"\r\n                            format=\"dd-MM-yyyy\"\r\n                            value={DOB}\r\n                            autoOk={true}\r\n                            onClick={() => { onDateInputClick() }}\r\n                            onKeyDown={(e) => { handleKeypress(e) }}\r\n                            open={openDatePicker}\r\n                            onChange={(e) => { handleDateChange(e) }}\r\n                            allowKeyboardControl={false}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">State</InputLabel>\r\n                    <Select\r\n                        native\r\n                        value={state.code}\r\n                        onChange={handleChange}\r\n                        label=\"State\"\r\n                        inputProps={{\r\n                            name: 'State',\r\n                            id: 'outlined-age-native-simple',\r\n                        }}\r\n                    >\r\n                        {\r\n                            stateList.map(x => { return <option key={x.code} value={x.code}>{x.description}</option> })\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={submit}>\r\n                    Create\r\n</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupComponent;\r\n\r\n","D:\\React\\ReactConcepts\\src\\component\\pageNotFound\\pageNotFoundComponent.js",[],"D:\\React\\ReactConcepts\\src\\component\\ErrorBoundary.js",[],"D:\\React\\ReactConcepts\\src\\component\\ViewUsers\\viewUsersComponent.js",["117","118","119","120","121","122","123"],"\r\nimport React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { EventContext } from '../contextAPI/EventContext';\r\nimport _ from 'lodash';\r\n\r\nfunction createData(id, firstName, lastName, userName, password) {\r\n    return { id, firstName, lastName, userName, password };\r\n}\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'id', numeric: true, disablePadding: true, label: 'Id' },\r\n    { id: 'firstName', numeric: false, disablePadding: false, label: 'First Name' },\r\n    { id: 'lastName', numeric: false, disablePadding: false, label: 'Last Name' },\r\n    { id: 'userName', numeric: false, disablePadding: false, label: 'User Name' },\r\n    { id: 'password', numeric: false, disablePadding: false, label: 'Password' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                        Users\r\n                    </Typography>\r\n                )}\r\n\r\n            {numSelected > 0 && (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function ViewUsersComponent(props) {\r\n    const { users, addUser } = useContext(EventContext);\r\n    const [rows, setRows] = React.useState(users);\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        let result;\r\n        if (props.searchValue) {\r\n            filterDate(props.searchValue);\r\n        } else {\r\n            setRows(users);\r\n        }\r\n    })\r\n\r\n    const filterDate = (searchedValue) => {\r\n        const filteredDate = _.filter(rows, function (item) {\r\n            if (item.firstName.trim().toLowerCase().includes(props.searchValue.trim().toLowerCase()) || item.lastName.trim().toLowerCase().includes(props.searchValue.trim().toLowerCase()) || item.userName.trim().toLowerCase().includes(props.searchValue.trim().toLowerCase())) {\r\n                return true;\r\n            }\r\n        });\r\n        setRows(filteredDate);\r\n    }\r\n\r\n\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.id);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.id)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.id}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                {row.id}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.firstName}</TableCell>\r\n                                            <TableCell align=\"right\">{row.lastName}</TableCell>\r\n                                            <TableCell align=\"right\">{row.userName}</TableCell>\r\n                                            <TableCell align=\"right\">{row.password}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: 53 * emptyRows }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[2, 3, 5]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","D:\\React\\ReactConcepts\\src\\component\\sportify\\sportifyComponent.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport _ from 'lodash';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport EndPoints from './../../Constants/endPoints';\r\nimport SongDetailCard from '../SongDetails/songDetailCard';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    useLocation\r\n} from \"react-router-dom\";\r\n\r\nimport CategoriesComponent from '../Categories/categoriesComponent';\r\n\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 220,\r\n        fontSize: theme.typography.pxToRem(12),\r\n        border: '1px solid #dadde9',\r\n    },\r\n}))(Tooltip);\r\n\r\nconst SportifyComponent = () => {\r\n    const [authCode, setAuthCode] = useState(new URLSearchParams(useLocation().search).get('code'));\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleTooltipClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleTooltipOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const config = new EndPoints();\r\n    const [baseUrl] = useState('https://accounts.spotify.com/');\r\n    const [apiBaseUrl] = useState('https://api.spotify.com/');\r\n    const playListcolumns = [\r\n        { field: 'description', headerName: 'Playlist Title', width: 400 },\r\n        { field: 'totalTracks', headerName: 'Tracks', width: 70 }\r\n    ];\r\n    const songsColumns = [\r\n        { field: 'id', headerName: 'No', width: 30 },\r\n        { field: 'name', headerName: 'Song', width: 300 },\r\n        { field: 'duration', headerName: 'Duration', width: 30 },\r\n    ];\r\n\r\n    const [playListRows, setPlayListRows] = useState([]);\r\n    const [categoriesOptions, setCategoriesOptions] = useState([]);\r\n    const [songsRows, setSongsRows] = useState([]);\r\n    const [selectedPlaylists, setSelectedPlaylists] = useState([]);\r\n\r\n    const [title, setTitle] = useState('');\r\n\r\n    const [sportifyToken, setSportifyToken] = useState('BQACvDj1023jyY3WvzKQQAM2a7yKj9HWEuUL5NM8VIAd6clP26HwD44KX9xqs5xrX4Cyf-N-a4F0n1fPMdUH1GYfjoxY98I5hxrSX7D4yQ_sfJzlHdxEnpXwPf4hdmUgcH0YbfftNTybVhO7dXV6pLAlRjdDGU5FBXa3UfsjFTqXlK7hgw');\r\n\r\n    const options = {\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n    }\r\n    const body = {\r\n        grant_type: 'authorization_code',\r\n        code: 'AQB6EcF58nyBWPeuSs_koktnFQ74C8pTv2UHj3ro6SyskV02JSlDkpM9qKGFDIy7fXbChfEvNtLwGbukm8jspu9PRUqFyVVIUgb7CfSlwBpRgJt0WOOVBiFDdtKxIX2Ldrbok-VyIDNkxc5TMMCYCtzut_ioOqxELVLEL51SvGQ538jrq-uT0PLtjhqaK1aMMbIQgOEI8VSwc1y1Qq-DVa6PhJCFCw',\r\n        redirect_uri: 'http://localhost:3000/sportify',\r\n        client_id: '654c7484fce14022bd0ec15f605a0bd3',\r\n        client_secret: '80455513ed344fd5b8c96667ae6a6e8c',\r\n    }\r\n\r\n    const getAuthCode = () => {\r\n        axios.get(`${baseUrl}${config.AuthCodeUrl}`\r\n        ).then(response => {\r\n\r\n            window.open(response.config.url, '_blank');\r\n\r\n            console.log(response)\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!authCode) {\r\n            getAuthCode();\r\n        }\r\n\r\n        // axios.post(`${baseUrl}${config.TokenUrl}`, qs.stringify(body), options\r\n        // ).then(response => {\r\n        //     console.log(response)\r\n        // }).catch(error => {\r\n        //     debugger\r\n        //     console.log(error.response)\r\n        // })\r\n        //  setCategoryDropdown(JSON.parse(localStorage.getItem(\"cate\")))\r\n        // axios.get(`${apiBaseUrl}${config.CategoriesUrl}`, { headers: { Authorization: `Bearer ${sportifyToken}` } })\r\n        //     .then(response => {\r\n        //         localStorage.setItem(\"cate\", JSON.stringify(response.data));\r\n        //         console.log(response.data);\r\n        //         setCategoryDropdown(response.data);\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         console.log('error ' + error);\r\n        //     });\r\n    }, []);\r\n\r\n    const setCategoryDropdown = (categories) => {\r\n        let categoryList = [];\r\n        // need to change the below object \r\n        categories.categories.items.map(item => {\r\n            const category = {\r\n                key: item.id,\r\n                text: item.name,\r\n                value: item.id,\r\n                image: { avatar: true, src: item.icons[0].url },\r\n            }\r\n            categoryList.push(category);\r\n\r\n        })\r\n        setCategoriesOptions(categoryList);\r\n    }\r\n    const handleCategoryChange = (event) => {\r\n        const id = _.find(categoriesOptions, ['text', event.target.textContent]).key;\r\n        getPlayListOptions(id);\r\n    }\r\n\r\n    const getPlayListOptions = (cattegoryId) => {\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.spotify.com/v1/browse/categories/${cattegoryId}/playlists?limit=50`, { headers: { Authorization: `Bearer ${sportifyToken}` } })\r\n            .then(response => {\r\n                console.log('plaulist ' + response);\r\n                setPlaylistRows(response.data.playlists);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            });\r\n    }\r\n\r\n\r\n    const setPlaylistRows = (playListData) => {\r\n        let playList = [];\r\n\r\n        playListData.items.map(x => {\r\n            const item = {\r\n                id: x.id,\r\n                description: x.description,\r\n                images: x.images[0].url,\r\n                totalTracks: x.tracks.total,\r\n                tracksUrl: x.tracks.href\r\n\r\n            }\r\n            playList.push(item);\r\n        })\r\n        setPlayListRows(playList);\r\n    }\r\n    const onChangePageHandler = (page) => {\r\n    }\r\n\r\n    const onRowSelect = (row) => {\r\n        // const re = selectedPlaylists;\r\n        // const result = _.find(selectedPlaylists, data.row.id);\r\n        // debugger;\r\n        if (row.isSelected) {\r\n            GetTracksAllTracks(row.data.tracksUrl, row.data.id);\r\n        }\r\n        else {\r\n            _.remove(songsRows, (x) => {\r\n                return x.playListId === row.data.id;\r\n            });\r\n            const data = songsRows\r\n            setSongsRows(data);\r\n        }\r\n    }\r\n    const GetTracksAllTracks = (trackURL, id) => {\r\n        axios.get(`${trackURL}`, { headers: { Authorization: `Bearer ${sportifyToken}` } })\r\n            .then(response => {\r\n                console.log('tracks ', response);\r\n                SetTracks(response.data.items, id)\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            });\r\n    }\r\n\r\n    const SetTracks = (items, id) => {\r\n        const songRows = [...songsRows];\r\n        items.map((x, index) => {\r\n            const track = {\r\n                id: index + 1,\r\n                artist: x.track.artists,\r\n                duration: millisToMinutesAndSeconds(x.track.duration_ms),\r\n                external_urls: x.track.external_urls,\r\n                href: x.track.href,\r\n                name: x.track.name,\r\n                popularity: x.track.popularity,\r\n                preview_url: x.track.preview_url,\r\n                playListId: id\r\n            }\r\n            songRows.push(track)\r\n        })\r\n        setSongsRows(songRows);\r\n    }\r\n    const millisToMinutesAndSeconds = (millis) => {\r\n        var minutes = Math.floor(millis / 60000);\r\n        var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n    // const setSelection = (data) => {\r\n    //     const res = _.differenceWith(selectedPlaylists, data.rowIds, _.isEqual)\r\n    //     let unCh = arr_diff(selectedPlaylists, data.rowIds);\r\n    //     if (data.rowIds.length > selectedPlaylists.length) {\r\n    //         console.log('new element is added')\r\n    //     } else {\r\n    //         console.log('deleted');\r\n    //     }\r\n    //     setSelectedPlaylists(data.rowIds);\r\n    // }\r\n\r\n    const arr_diff = (a1, a2) => {\r\n        var a = [], diff = [];\r\n        for (var i = 0; i < a1.length; i++) {\r\n            a[a1[i]] = true;\r\n        }\r\n        for (var i = 0; i < a2.length; i++) {\r\n            if (a[a2[i]]) {\r\n                delete a[a2[i]];\r\n            } else {\r\n                a[a2[i]] = true;\r\n            }\r\n        }\r\n        for (var k in a) {\r\n            diff.push(k);\r\n        }\r\n        return diff;\r\n    }\r\n    const onRowHoverHandler = (params) => {\r\n        setTitle(params.row.name);\r\n    }\r\n\r\n    const HtmlTooltip = withStyles((theme) => ({\r\n        tooltip: {\r\n            backgroundColor: '#f5f5f9',\r\n            color: 'rgba(0, 0, 0, 0.87)',\r\n            maxWidth: 220,\r\n            fontSize: theme.typography.pxToRem(12),\r\n            border: '1px solid #dadde9',\r\n        },\r\n    }))(Tooltip);\r\n\r\n    return (<div>\r\n        <CategoriesComponent />\r\n        {/* <div>\r\n            <Dropdown\r\n                placeholder='Select Category'\r\n                fluid\r\n                selection\r\n                options={categoriesOptions}\r\n                onChange={(e) => handleCategoryChange(e)}\r\n            />\r\n        </div>\r\n        <div style={{ height: 400, width: '45%' }}>\r\n            <DataGrid rows={playListRows} columns={playListcolumns} pageSize={5} checkboxSelection\r\n                onPageChange={(params) => {\r\n                    onChangePageHandler(params);\r\n                }} onRowSelected={(param) => { onRowSelect(param) }} />\r\n        </div>\r\n        <div style={{ height: 400, width: '50%' }}>\r\n            <DataGrid rows={songsRows} columns={songsColumns} pageSize={5} onPageChange={(params) => {\r\n                onChangePageHandler(params);\r\n            }} onRowHover={(params) => { onRowHoverHandler(params) }} />\r\n        </div>\r\n\r\n        <HtmlTooltip\r\n            title={\r\n                <React.Fragment>\r\n                    <Typography color=\"inherit\">Tooltip with HTML</Typography>\r\n                    <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\r\n                    {\"It's very engaging. Right?\"}\r\n                </React.Fragment>\r\n            }\r\n        >\r\n            <Button >HTML</Button>\r\n        </HtmlTooltip> */}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SportifyComponent","D:\\React\\ReactConcepts\\src\\Constants\\endPoints.js",[],"D:\\React\\ReactConcepts\\src\\component\\SongDetails\\songDetailCard.js",[],"D:\\React\\ReactConcepts\\src\\component\\Categories\\categoriesComponent.js",["160","161","162","163","164","165"],"D:\\React\\ReactConcepts\\src\\component\\music\\musicComponent.js",["166","167","168","169","170","171"],"D:\\React\\ReactConcepts\\src\\component\\playLists\\playListComponent.js",["172","173","174","175","176","177","178","179"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './playListComponent.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LibraryMusic from '@material-ui/icons/LibraryMusic'\r\nimport Carousel from 'react-elastic-carousel';\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         width: 150,\r\n//         height: 200,\r\n//         border: '1px solid',\r\n//         '&:hover': {\r\n//             width: 140,\r\n//             height: 190,\r\n//         }\r\n\r\n//     },\r\n//     media: {\r\n//         // height: 140,\r\n//     },\r\n\r\n// }));\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 1, itemsToScroll: 1 },\r\n    { width: 550, itemsToShow: 4, itemsToScroll: 2 },\r\n    { width: 768, itemsToShow: 6, itemsToScroll: 2 },\r\n    { width: 1200, itemsToShow: 8, itemsToScroll: 2 }\r\n];\r\n\r\nclass PlayListComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        const pr = this.props;\r\n\r\n    }\r\n    render() {\r\n        return (<React.Fragment key={this.props.title}>\r\n\r\n            <div className='playListTitle'>\r\n                {this.props.title}\r\n            </div>\r\n            <Carousel breakPoints={breakPoints}>\r\n                {this.props.items.length > 0 && this.props.items.map((item, index) => {\r\n                    return <Card className={'imgCard'} onClick={() => { this.props.handlePlayListChanges(item) }}>\r\n                        <CardActionArea>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                image={item.album?.images[0]?.url ? item.album?.images[0]?.url : item.images[0]?.url}\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                    {item.name} {item.tracks?.total && (item.tracks?.total)}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n\r\n                    </Card>\r\n                })\r\n                }\r\n            </Carousel>\r\n        </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n// const PlayListComponent = (props) => {\r\n//     const classes = useStyles();\r\n//     debugger;\r\n\r\n//     useEffect(() => {\r\n//     }, [])\r\n\r\n//     return (<React.Fragment key={props.title}>\r\n\r\n//         <div className='playListTitle'>\r\n//             {props.title}\r\n//         </div>\r\n//         <Carousel breakPoints={breakPoints}>\r\n//             {props.items.length > 0 && props.items.map((item, index) => {\r\n//                 return <Card className={classes.root} onClick={() => { props.handlePlayListChanges(item) }}>\r\n//                     <CardActionArea>\r\n//                         <CardMedia\r\n//                             component=\"img\"\r\n//                             className={classes.media}\r\n//                             image={item.album?.images[0]?.url ? item.album?.images[0]?.url : item.images[0]?.url}\r\n//                             title=\"Contemplative Reptile\"\r\n//                         />\r\n//                         <CardContent>\r\n//                             <Typography gutterBottom variant=\"h6\" component=\"h6\">\r\n//                                 {item.name} {item.tracks?.total && (item.tracks?.total)}\r\n//                             </Typography>\r\n//                         </CardContent>\r\n//                     </CardActionArea>\r\n\r\n//                 </Card>\r\n//             })\r\n//             }\r\n//         </Carousel>\r\n//     </React.Fragment>)\r\n\r\n// }\r\nexport default React.memo(PlayListComponent);","D:\\React\\ReactConcepts\\src\\component\\SongsList\\SongsListComponent.js",["180","181","182","183","184","185","186","187","188"],"D:\\React\\ReactConcepts\\src\\component\\searchBaar\\searchBtnComponent.js",["189","190","191"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport './searchBtnComponent.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport SearchSharp from '@material-ui/icons/SearchSharp'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport _ from 'lodash'\r\n\r\nimport axios from 'axios'\r\nimport EndPoints from './../../Constants/endPoints';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    textField: {\r\n        width: '25ch',\r\n    },\r\n}));\r\n\r\n\r\nconst SearchBtnComponent = (props) => {\r\n    const classes = useStyles();\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [searchResult, setSearchResult] = useState({});\r\n    const config = new EndPoints();\r\n    const [showLoading, setShowLoading] = React.useState(false);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setSearchResult({});\r\n        setSearchValue(event.target.value);\r\n        if (event.target.value.trim().length > 3) {\r\n            setShowLoading(true);\r\n            getSearchResult();\r\n        } else {\r\n            setShowLoading(false);\r\n            setSearchResult({});\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const getSearchResult = () => {\r\n        setSearchResult({});\r\n        axios.get(`https://api.spotify.com/v1/search?q=${searchValue}&type=album,artist,track&limit=10`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                setShowLoading(false);\r\n                const item = _.unionBy(response.data?.albums?.items, response.data?.tracks?.items, response.data?.artists?.items);\r\n                setSearchResult(item);\r\n            })\r\n            .catch((error) => {\r\n                setShowLoading(false);\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n\r\n    const handleSearchItemSelect = (item) => {\r\n        props.handlePlayListChanges(item)\r\n    }\r\n\r\n\r\n    return (<Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n            <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-amount\">Search Song, Artist</InputLabel>\r\n                <OutlinedInput\r\n                    id=\"outlined-adornment-amount\"\r\n                    value={searchValue}\r\n                    onChange={(e) => { handleChange(e) }}\r\n                    startAdornment={<InputAdornment position=\"start\"><SearchSharp /></InputAdornment>}\r\n                    labelWidth={120}\r\n                    endAdornment={<InputAdornment position=\"start\">{showLoading && <i className=\"fa fa-spinner fa-spin\"></i>}</InputAdornment>}\r\n                    onBlur={() => { setSearchValue(''); }}\r\n                />\r\n            </FormControl>\r\n            {searchResult.length > 0 && <List dense className={classes.root}>\r\n                {searchResult.map((item, index) => {\r\n                    return (\r\n                        <ListItem key={index} button onClick={() => handleSearchItemSelect(item)} className='searchResultRow'>\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    alt={`Avatar n°${index + 1}`}\r\n                                    src={item?.images?.length > 0 && item?.images[2]?.url}\r\n                                    src={item?.album?.images?.length > 0 && item?.album?.images[2]?.url}\r\n                                //   src=''\r\n                                />\r\n                            </ListItemAvatar>\r\n                            <ListItemText id={item.id} primary={item.name} />\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n            </List>\r\n            }\r\n        </Grid>\r\n    </Grid>)\r\n}\r\n\r\nexport default SearchBtnComponent;",{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":10,"column":3,"nodeType":"198","messageId":"199","endLine":10,"endColumn":7},{"ruleId":"196","severity":1,"message":"200","line":17,"column":8,"nodeType":"198","messageId":"199","endLine":17,"endColumn":25},{"ruleId":"196","severity":1,"message":"201","line":22,"column":7,"nodeType":"198","messageId":"199","endLine":22,"endColumn":19},{"ruleId":"196","severity":1,"message":"202","line":34,"column":13,"nodeType":"198","messageId":"199","endLine":34,"endColumn":26},{"ruleId":"196","severity":1,"message":"203","line":34,"column":53,"nodeType":"198","messageId":"199","endLine":34,"endColumn":60},{"ruleId":"196","severity":1,"message":"204","line":34,"column":75,"nodeType":"198","messageId":"199","endLine":34,"endColumn":86},{"ruleId":"205","severity":1,"message":"206","line":68,"column":31,"nodeType":"207","messageId":"208","endLine":68,"endColumn":33},{"ruleId":"205","severity":1,"message":"206","line":68,"column":72,"nodeType":"207","messageId":"208","endLine":68,"endColumn":74},{"ruleId":"205","severity":1,"message":"209","line":72,"column":20,"nodeType":"207","messageId":"208","endLine":72,"endColumn":22},{"ruleId":"196","severity":1,"message":"210","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":23},{"ruleId":"196","severity":1,"message":"211","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"212","line":20,"column":22,"nodeType":"198","messageId":"199","endLine":20,"endColumn":28},{"ruleId":"196","severity":1,"message":"213","line":21,"column":5,"nodeType":"198","messageId":"199","endLine":21,"endColumn":11},{"ruleId":"196","severity":1,"message":"214","line":22,"column":5,"nodeType":"198","messageId":"199","endLine":22,"endColumn":10},{"ruleId":"196","severity":1,"message":"215","line":26,"column":8,"nodeType":"198","messageId":"199","endLine":26,"endColumn":23},{"ruleId":"196","severity":1,"message":"216","line":97,"column":11,"nodeType":"198","messageId":"199","endLine":97,"endColumn":25},{"ruleId":"196","severity":1,"message":"211","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"217","line":24,"column":11,"nodeType":"198","messageId":"199","endLine":24,"endColumn":22},{"ruleId":"192","replacedBy":"218"},{"ruleId":"194","replacedBy":"219"},{"ruleId":"196","severity":1,"message":"220","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":13},{"ruleId":"196","severity":1,"message":"221","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":16},{"ruleId":"196","severity":1,"message":"222","line":14,"column":5,"nodeType":"198","messageId":"199","endLine":14,"endColumn":23},{"ruleId":"196","severity":1,"message":"223","line":20,"column":8,"nodeType":"198","messageId":"199","endLine":20,"endColumn":14},{"ruleId":"196","severity":1,"message":"224","line":61,"column":23,"nodeType":"198","messageId":"199","endLine":61,"endColumn":35},{"ruleId":"196","severity":1,"message":"225","line":20,"column":8,"nodeType":"198","messageId":"199","endLine":20,"endColumn":24},{"ruleId":"196","severity":1,"message":"213","line":21,"column":8,"nodeType":"198","messageId":"199","endLine":21,"endColumn":14},{"ruleId":"196","severity":1,"message":"226","line":23,"column":8,"nodeType":"198","messageId":"199","endLine":23,"endColumn":22},{"ruleId":"196","severity":1,"message":"227","line":27,"column":10,"nodeType":"198","messageId":"199","endLine":27,"endColumn":20},{"ruleId":"196","severity":1,"message":"203","line":199,"column":20,"nodeType":"198","messageId":"199","endLine":199,"endColumn":27},{"ruleId":"228","severity":1,"message":"229","line":214,"column":5,"nodeType":"230","endLine":214,"endColumn":20,"suggestions":"231"},{"ruleId":"196","severity":1,"message":"232","line":215,"column":13,"nodeType":"198","messageId":"199","endLine":215,"endColumn":19},{"ruleId":"196","severity":1,"message":"233","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":10},{"ruleId":"196","severity":1,"message":"234","line":4,"column":10,"nodeType":"198","messageId":"199","endLine":4,"endColumn":18},{"ruleId":"196","severity":1,"message":"235","line":6,"column":10,"nodeType":"198","messageId":"199","endLine":6,"endColumn":18},{"ruleId":"196","severity":1,"message":"236","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":22},{"ruleId":"196","severity":1,"message":"237","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":18},{"ruleId":"196","severity":1,"message":"238","line":11,"column":22,"nodeType":"198","messageId":"199","endLine":11,"endColumn":32},{"ruleId":"196","severity":1,"message":"211","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":14},{"ruleId":"196","severity":1,"message":"212","line":14,"column":22,"nodeType":"198","messageId":"199","endLine":14,"endColumn":28},{"ruleId":"196","severity":1,"message":"197","line":15,"column":5,"nodeType":"198","messageId":"199","endLine":15,"endColumn":9},{"ruleId":"196","severity":1,"message":"239","line":22,"column":7,"nodeType":"198","messageId":"199","endLine":22,"endColumn":18},{"ruleId":"196","severity":1,"message":"240","line":33,"column":22,"nodeType":"198","messageId":"199","endLine":33,"endColumn":33},{"ruleId":"196","severity":1,"message":"241","line":34,"column":12,"nodeType":"198","messageId":"199","endLine":34,"endColumn":16},{"ruleId":"196","severity":1,"message":"242","line":36,"column":11,"nodeType":"198","messageId":"199","endLine":36,"endColumn":29},{"ruleId":"196","severity":1,"message":"243","line":40,"column":11,"nodeType":"198","messageId":"199","endLine":40,"endColumn":28},{"ruleId":"196","severity":1,"message":"244","line":45,"column":12,"nodeType":"198","messageId":"199","endLine":45,"endColumn":22},{"ruleId":"196","severity":1,"message":"245","line":46,"column":11,"nodeType":"198","messageId":"199","endLine":46,"endColumn":26},{"ruleId":"196","severity":1,"message":"246","line":50,"column":11,"nodeType":"198","messageId":"199","endLine":50,"endColumn":23},{"ruleId":"196","severity":1,"message":"247","line":56,"column":12,"nodeType":"198","messageId":"199","endLine":56,"endColumn":24},{"ruleId":"196","severity":1,"message":"248","line":59,"column":12,"nodeType":"198","messageId":"199","endLine":59,"endColumn":29},{"ruleId":"196","severity":1,"message":"249","line":59,"column":31,"nodeType":"198","messageId":"199","endLine":59,"endColumn":51},{"ruleId":"196","severity":1,"message":"250","line":61,"column":12,"nodeType":"198","messageId":"199","endLine":61,"endColumn":17},{"ruleId":"196","severity":1,"message":"251","line":63,"column":27,"nodeType":"198","messageId":"199","endLine":63,"endColumn":43},{"ruleId":"196","severity":1,"message":"252","line":65,"column":11,"nodeType":"198","messageId":"199","endLine":65,"endColumn":18},{"ruleId":"196","severity":1,"message":"253","line":70,"column":11,"nodeType":"198","messageId":"199","endLine":70,"endColumn":15},{"ruleId":"228","severity":1,"message":"254","line":113,"column":8,"nodeType":"255","endLine":113,"endColumn":10,"suggestions":"256"},{"ruleId":"196","severity":1,"message":"257","line":115,"column":11,"nodeType":"198","messageId":"199","endLine":115,"endColumn":30},{"ruleId":"258","severity":1,"message":"259","line":118,"column":46,"nodeType":"260","messageId":"261","endLine":118,"endColumn":48},{"ruleId":"196","severity":1,"message":"262","line":130,"column":11,"nodeType":"198","messageId":"199","endLine":130,"endColumn":31},{"ruleId":"258","severity":1,"message":"259","line":150,"column":34,"nodeType":"260","messageId":"261","endLine":150,"endColumn":36},{"ruleId":"196","severity":1,"message":"263","line":163,"column":11,"nodeType":"198","messageId":"199","endLine":163,"endColumn":30},{"ruleId":"196","severity":1,"message":"264","line":166,"column":11,"nodeType":"198","messageId":"199","endLine":166,"endColumn":22},{"ruleId":"258","severity":1,"message":"259","line":194,"column":30,"nodeType":"260","messageId":"261","endLine":194,"endColumn":32},{"ruleId":"196","severity":1,"message":"265","line":226,"column":11,"nodeType":"198","messageId":"199","endLine":226,"endColumn":19},{"ruleId":"266","severity":1,"message":"267","line":231,"column":18,"nodeType":"198","messageId":"268","endLine":231,"endColumn":19},{"ruleId":"196","severity":1,"message":"269","line":243,"column":11,"nodeType":"198","messageId":"199","endLine":243,"endColumn":28},{"ruleId":"196","severity":1,"message":"239","line":247,"column":11,"nodeType":"198","messageId":"199","endLine":247,"endColumn":22},{"ruleId":"196","severity":1,"message":"220","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":13},{"ruleId":"196","severity":1,"message":"270","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":12},{"ruleId":"196","severity":1,"message":"271","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":14},{"ruleId":"196","severity":1,"message":"272","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":24},{"ruleId":"228","severity":1,"message":"273","line":55,"column":8,"nodeType":"255","endLine":55,"endColumn":10,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":87,"column":33,"nodeType":"277","endLine":87,"endColumn":59},{"ruleId":"196","severity":1,"message":"278","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":9},{"ruleId":"196","severity":1,"message":"279","line":9,"column":8,"nodeType":"198","messageId":"199","endLine":9,"endColumn":18},{"ruleId":"196","severity":1,"message":"280","line":14,"column":12,"nodeType":"198","messageId":"199","endLine":14,"endColumn":23},{"ruleId":"228","severity":1,"message":"281","line":76,"column":8,"nodeType":"255","endLine":76,"endColumn":10,"suggestions":"282"},{"ruleId":"196","severity":1,"message":"283","line":276,"column":11,"nodeType":"198","messageId":"199","endLine":276,"endColumn":31},{"ruleId":"284","severity":1,"message":"285","line":310,"column":39,"nodeType":"286","endLine":310,"endColumn":216},{"ruleId":"196","severity":1,"message":"287","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":26},{"ruleId":"196","severity":1,"message":"288","line":1,"column":28,"nodeType":"198","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"196","severity":1,"message":"238","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":20},{"ruleId":"196","severity":1,"message":"289","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":19},{"ruleId":"196","severity":1,"message":"211","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":14},{"ruleId":"196","severity":1,"message":"290","line":11,"column":8,"nodeType":"198","messageId":"199","endLine":11,"endColumn":12},{"ruleId":"196","severity":1,"message":"291","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":20},{"ruleId":"196","severity":1,"message":"292","line":43,"column":15,"nodeType":"198","messageId":"199","endLine":43,"endColumn":17},{"ruleId":"196","severity":1,"message":"288","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"237","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":18},{"ruleId":"196","severity":1,"message":"293","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":25},{"ruleId":"196","severity":1,"message":"294","line":11,"column":8,"nodeType":"198","messageId":"199","endLine":11,"endColumn":14},{"ruleId":"196","severity":1,"message":"295","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":13},{"ruleId":"196","severity":1,"message":"296","line":40,"column":11,"nodeType":"198","messageId":"199","endLine":40,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":92,"column":82,"nodeType":"207","messageId":"208","endLine":92,"endColumn":84},{"ruleId":"297","severity":1,"message":"298","line":98,"column":102,"nodeType":"299","messageId":"300","endLine":98,"endColumn":103},{"ruleId":"297","severity":1,"message":"298","line":110,"column":105,"nodeType":"299","messageId":"300","endLine":110,"endColumn":106},{"ruleId":"196","severity":1,"message":"301","line":13,"column":8,"nodeType":"198","messageId":"199","endLine":13,"endColumn":31},{"ruleId":"196","severity":1,"message":"302","line":16,"column":8,"nodeType":"198","messageId":"199","endLine":16,"endColumn":16},{"ruleId":"275","severity":1,"message":"276","line":101,"column":37,"nodeType":"277","endLine":101,"endColumn":105},"no-native-reassign",["303"],"no-negated-in-lhs",["304"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'SportifyComponent' is defined but never used.","'validateForm' is assigned a value but never used.","'loginUserData' is assigned a value but never used.","'addUser' is assigned a value but never used.","'handleClose' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useRef' is defined but never used.","'Button' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'SignupComponent' is defined but never used.","'preventDefault' is assigned a value but never used.","'handleClick' is assigned a value but never used.",["303"],["304"],"'Paper' is defined but never used.","'Snackbar' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'moment' is defined but never used.","'setStateList' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'FilterListIcon' is defined but never used.","'createData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRows'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.searchValue, filterDate, users] as a second argument to the useEffect Hook.","MemberExpression",["305"],"'result' is defined but never used.","'qs' is defined but never used.","'Dropdown' is defined but never used.","'DataGrid' is defined but never used.","'SongDetailCard' is defined but never used.","'Typography' is defined but never used.","'makeStyles' is defined but never used.","'HtmlTooltip' is assigned a value but never used.","'setAuthCode' is assigned a value but never used.","'open' is assigned a value but never used.","'handleTooltipClose' is assigned a value but never used.","'handleTooltipOpen' is assigned a value but never used.","'apiBaseUrl' is assigned a value but never used.","'playListcolumns' is assigned a value but never used.","'songsColumns' is assigned a value but never used.","'playListRows' is assigned a value but never used.","'selectedPlaylists' is assigned a value but never used.","'setSelectedPlaylists' is assigned a value but never used.","'title' is assigned a value but never used.","'setSportifyToken' is assigned a value but never used.","'options' is assigned a value but never used.","'body' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authCode' and 'getAuthCode'. Either include them or remove the dependency array.","ArrayExpression",["306"],"'setCategoryDropdown' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleCategoryChange' is assigned a value but never used.","'onChangePageHandler' is assigned a value but never used.","'onRowSelect' is assigned a value but never used.","'arr_diff' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'onRowHoverHandler' is assigned a value but never used.","'Icon' is defined but never used.","'grey' is defined but never used.","'LibraryMusicIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["307"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'_' is defined but never used.","'SearchIcon' is defined but never used.","'selectedCat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFeaturedPlayList', 'getHeartBreakSongs', 'getMashupSongs', 'getMostTrendingSongs', 'getMostViewSongs', 'getNewReleaseData', 'getPanjabiSongs', 'getPanjabiTracks', 'getRepriseSongs', 'getSadSongs', 'getTopTracks', 'getcurrentYearSongs', and 'marathiSongs'. Either include them or remove the dependency array.",["308"],"'playMusicButtonClick' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","'CardActions' is defined but never used.","'Grid' is defined but never used.","'LibraryMusic' is defined but never used.","'pr' is assigned a value but never used.","'PlayCircleOutline' is defined but never used.","'People' is defined but never used.","'axios' is defined but never used.","'config' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'ListItemSecondaryAction' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},"Add dependencies array: [props.searchValue, filterDate, users]",{"range":"317","text":"318"},"Update the dependencies array to be: [authCode, getAuthCode]",{"range":"319","text":"320"},"Update the dependencies array to be: [getCategories]",{"range":"321","text":"322"},"Update the dependencies array to be: [getFeaturedPlayList, getHeartBreakSongs, getMashupSongs, getMostTrendingSongs, getMostViewSongs, getNewReleaseData, getPanjabiSongs, getPanjabiTracks, getRepriseSongs, getSadSongs, getTopTracks, getcurrentYearSongs, marathiSongs]",{"range":"323","text":"324"},[7821,7821],", [props.searchValue, filterDate, users]",[4292,4294],"[authCode, getAuthCode]",[1681,1683],"[getCategories]",[3125,3127],"[getFeaturedPlayList, getHeartBreakSongs, getMashupSongs, getMostTrendingSongs, getMostViewSongs, getNewReleaseData, getPanjabiSongs, getPanjabiTracks, getRepriseSongs, getSadSongs, getTopTracks, getcurrentYearSongs, marathiSongs]"]