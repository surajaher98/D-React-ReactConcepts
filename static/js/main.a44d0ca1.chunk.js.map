{"version":3,"sources":["component/contextAPI/EventContext.js","component/signup/signupComponent.js","component/header/HeaderComponent.js","component/login/LoginComponent.js","component/pageNotFound/pageNotFoundComponent.js","component/ErrorBoundary.js","component/ViewUsers/viewUsersComponent.js","Constants/endPoints.js","HttpInterceptor/httpInterceptor.js","component/Categories/categoriesComponent.js","component/sportify/sportifyComponent.js","component/playLists/playListComponent.js","component/SongsList/SongsListComponent.js","component/searchBaar/searchBtnComponent.js","component/music/musicComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","elevation","variant","useStyles","makeStyles","theme","root","width","marginTop","spacing","EventContext","createContext","EventContextProvider","children","useState","id","firstName","lastName","loginUserData","setloginUserData","message","setMessage","users","addUser","classes","React","open","setOpen","toasterSeverity","SetToasterSeverity","handleClose","event","reason","className","Snackbar","autoHideDuration","onClose","severity","Provider","value","handleClick","seretity","margin","formControl","minWidth","selectEmpty","SignupComponent","error","setFirstName","setLastName","userName","setUserName","password","setPassword","openDatePicker","setOpenDatePicker","Date","DOB","setDOB","age","name","state","setState","stateList","useContext","checkFormValidation","firstNameErr","lastNameErr","isValid","length","require","len","includes","handleFNameChange","target","getValidationMessages","errorObj","Object","keys","map","key","noValidate","autoComplete","TextField","label","onChange","utils","DateFnsUtils","Grid","container","justify","format","autoOk","onClick","onKeyDown","e","preventDefault","handleKeypress","allowKeyboardControl","KeyboardButtonProps","FormControl","InputLabel","htmlFor","Select","native","code","inputProps","x","description","Button","color","newUser","Math","floor","random","passwor","grow","flexGrow","menuButton","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","HeaderComponent","prop","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","mobileMenuId","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","AppBar","Toolbar","edge","Typography","noWrap","InputBase","placeholder","input","searchValue","searchHandler","to","LoginComponent","UserName","Password","credentials","setCredentials","userNameError","setUserNameError","passwordError","setPasswordError","handleInputChange","userNameErr","passwordErr","required","trim","LengthError","atTheRateError","result","_","find","user","undefined","localStorage","setItem","JSON","stringify","PageNotFoundComponent","location","pathname","ErrorBoundary","hasError","info","this","Component","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingRight","highlight","type","secondary","main","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","clsx","component","Tooltip","paper","marginBottom","table","border","clip","overflow","top","ViewUsersComponent","rows","setRows","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","useEffect","filterDate","searchedValue","filteredDate","filter","item","toLowerCase","emptyRows","min","Paper","TableContainer","Table","aria-labelledby","size","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","role","aria-checked","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","EndPoints","BaseUrl","AuthCodeUrl","TokenUrl","CategoriesUrl","Token","PlayList","axiosApiInstance","axios","interceptors","request","use","config","headers","sessionStorage","getItem","parse","Promise","reject","response","err","resolve","originalReq","status","__isRetryRequest","myHeaders","Headers","append","urlencoded","URLSearchParams","fetch","method","mode","cache","redirect","referrer","body","then","res","json","console","log","token","access_token","ref_token_exp_time","now","setTime","getTime","prototype","addHours","h","button","background","specialBtn","boxShadow","CategoriesComponent","allCategories","setAllCategories","currentCategories","setCurrentCategories","getCategories","get","Authorization","data","categories","items","catch","xs","handlePlayListChanges","Pagination","startIndex","endIndex","arr","ceil","withStyles","tooltip","maxWidth","fontSize","typography","pxToRem","breakPoints","itemsToShow","itemsToScroll","PlayListComponent","Fragment","Card","CardActionArea","CardMedia","image","album","images","url","CardContent","gutterBottom","tracks","total","memo","textAlign","songsPaper","SongsListComponent","millisToMinutesAndSeconds","millis","minutes","seconds","toFixed","src","currentPlaylistTracks","playlistData","alt","tracksData","track","popularity","artists","duration_ms","onTrackSelect","textField","SearchBtnComponent","setSearchValue","searchResult","setSearchResult","showLoading","setShowLoading","getSearchResult","unionBy","albums","fullWidth","OutlinedInput","startAdornment","InputAdornment","labelWidth","endAdornment","onBlur","List","dense","ListItem","handleSearchItemSelect","ListItemAvatar","Avatar","ListItemText","MusicComponent","setSelectedCat","cateName","selectedCatItems","setSelectedCatItems","allPlaylistData","setAllPlaylistData","setTracks","nowPlaying","setNowPlaying","handlePlayListChange","playlist","getPanjabiSongs","getTopTracks","getMostViewSongs","setInterval","clearTimeout","getcurrentYearSongs","getFeaturedPlayList","marathiSongs","getRepriseSongs","obj","playListTitle","playListItems","playlists","cattegoryId","categoryName","replace","frameBorder","allowtransparency","allow","App","Container","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a44d0ca1.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { createContext, useState } from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport const EventContext = createContext();\r\n\r\nexport const EventContextProvider = ({ children }) => {\r\n\r\n    const [loginUserData, setloginUserData] = useState({ id: '', firstName: '', lastName: '' });\r\n    const [message, setMessage] = useState('');\r\n    const [users, addUser] = useState([\r\n        {\r\n            \"id\": 1,\r\n            \"firstName\": \"Vinay\",\r\n            \"lastName\": \"Revar\",\r\n            \"userName\": \"vinay@123\",\r\n            \"password\": \"123\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"firstName\": \"Roshan\",\r\n            \"lastName\": \"Shinde\",\r\n            \"userName\": \"roshan@123\",\r\n            \"password\": \"123\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"firstName\": \"Akash\",\r\n            \"lastName\": \"Kalewar\",\r\n            \"userName\": \"akash@123\",\r\n            \"password\": \"123\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"firstName\": \"Ajay\",\r\n            \"lastName\": \"Shelar\",\r\n            \"userName\": \"ajay@123\",\r\n            \"password\": \"123\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"firstName\": \"Test\",\r\n            \"lastName\": \"Test\",\r\n            \"userName\": \"abc@\",\r\n            \"password\": \"123\"\r\n        },\r\n    ]);\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [toasterSeverity, SetToasterSeverity] = useState(false);\r\n\r\n    const handleClick = (seretity, message) => {\r\n        SetToasterSeverity(seretity);\r\n        setMessage(message);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <Snackbar open={open} autoHideDuration={20000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity={toasterSeverity ? 'success' : 'error'}>\r\n                        {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n            <EventContext.Provider value={{ loginUserData, setloginUserData, users, addUser, handleClick, handleClose }}>\r\n                {children}\r\n            </EventContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport './signupComponent.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { EventContext } from '../contextAPI/EventContext';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport moment from 'moment';\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         '& > *': {\r\n//             margin: theme.spacing(1),\r\n//             width: '25ch',\r\n//         },\r\n//     },\r\n// }));\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '40ch',\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\nconst SignupComponent = () => {\r\n    const classes = useStyles();\r\n    const [firstName, setFirstName] = useState({ value: '', error: {} });\r\n    const [lastName, setLastName] = useState({ value: '', error: {} });\r\n    const [userName, setUserName] = useState({ value: '', error: {} });\r\n    const [password, setPassword] = useState({ value: '', error: {} });\r\n    const [openDatePicker, setOpenDatePicker] = useState(false);\r\n\r\n    const [DOB, setDOB] = React.useState(new Date());\r\n    const [state, setState] = React.useState({ age: '', name: '' });\r\n    const [stateList, setStateList] = useState([\r\n        {\r\n            \"code\": \"maha\",\r\n            \"description\": \"Mahatashtra\"\r\n        },\r\n        {\r\n            \"code\": \"up\",\r\n            \"description\": \"Uttar Predesh\"\r\n        }\r\n        , {\r\n            \"code\": \"mp\",\r\n            \"description\": \"Madhya Pradesh\"\r\n        },\r\n        {\r\n            \"code\": \"kar\",\r\n            \"description\": \"Karnataka\"\r\n        },\r\n        {\r\n            \"code\": \"ban\",\r\n            \"description\": \"Banglore\"\r\n        }\r\n    ]);\r\n\r\n    const handleChange = (e) => {\r\n        setState({ code: e.target.value });\r\n    };\r\n\r\n    const handleDateChange = (date) => {\r\n        setDOB(date);\r\n        setOpenDatePicker(false);\r\n\r\n    };\r\n\r\n    const { users, addUser } = useContext(EventContext);\r\n\r\n    const submit = () => {\r\n        const isValid = checkFormValidation();\r\n        if (!isValid) {\r\n            return;\r\n        }\r\n        const newUser = {\r\n            id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\r\n            firstName: firstName.value,\r\n            lastName: lastName.value,\r\n            userName: userName.value,\r\n            passwor: password.value\r\n        }\r\n        addUser([...users, newUser]);\r\n\r\n    }\r\n\r\n    const checkFormValidation = () => {\r\n        const firstNameErr = {};\r\n        const lastNameErr = {};\r\n        let isValid = true;\r\n        if (!firstName.value.length > 0) {\r\n            firstNameErr.require = 'first name is required';\r\n            isValid = false;\r\n        }\r\n        if (firstName.value.length < 2) {\r\n            firstNameErr.len = 'first name should be greater than 2 characters';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!lastName.value.length > 0) {\r\n            lastNameErr.require = 'last name is required';\r\n            isValid = false;\r\n        }\r\n\r\n        if (lastName.value.includes(firstName.value)) {\r\n            lastNameErr.require = 'last name should not containe first name';\r\n            isValid = false;\r\n        }\r\n\r\n        setFirstName({ value: firstName.value, error: firstNameErr });\r\n        setLastName({ value: lastName.value, error: lastNameErr });\r\n        return isValid;\r\n    }\r\n    const handleFNameChange = (event) => {\r\n        const { id, value } = event.target;\r\n        switch (id) {\r\n            case 'fname':\r\n                setFirstName({ value: value, error: firstName.error });\r\n                break;\r\n            case 'lname':\r\n                setLastName({ value: value, error: lastName.error });\r\n                break;\r\n            case 'userName':\r\n                setUserName({ value: value, error: userName.error });\r\n                break;\r\n            case 'password':\r\n                setPassword({ value: value, error: password.error });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const getValidationMessages = (errorObj) => {\r\n        return (\r\n            <div>\r\n                {\r\n                    Object.keys(errorObj).map(key => {\r\n                        return <Alert key={errorObj[key]} severity=\"error\">{errorObj[key]}</Alert>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    const handleKeypress = (e) => {\r\n        e.preventDefault();\r\n        return false\r\n    }\r\n    const onDateInputClick = () => {\r\n        setOpenDatePicker(true);\r\n    }\r\n\r\n    return (\r\n        <div className='signupSection'>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n                <TextField className={'inputField'} label=\"First Name\" id={'fname'} value={firstName.value} onChange={(event) => handleFNameChange(event)} variant=\"outlined\" />\r\n                {\r\n                    getValidationMessages(firstName.error)\r\n                }\r\n                <TextField className={'inputField'} label=\"Last Name\" id={'lname'} value={lastName.value} onChange={(event) => handleFNameChange(event)} variant=\"outlined\" />\r\n                {\r\n                    getValidationMessages(lastName.error)\r\n                }\r\n                <TextField className={'inputField'} label=\"User Name\" id={'userName'} value={userName.value} onChange={(event) => handleFNameChange(event)} variant=\"outlined\" />\r\n                {\r\n\r\n                }\r\n                <TextField className={'inputField'} label=\"Password\" id={'password'} value={password.value} onChange={(event) => handleFNameChange(event)} variant=\"outlined\" />\r\n                {\r\n\r\n                }\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            label=\"Select Date of Birth\"\r\n                            format=\"dd-MM-yyyy\"\r\n                            value={DOB}\r\n                            autoOk={true}\r\n                            onClick={() => { onDateInputClick() }}\r\n                            onKeyDown={(e) => { handleKeypress(e) }}\r\n                            open={openDatePicker}\r\n                            onChange={(e) => { handleDateChange(e) }}\r\n                            allowKeyboardControl={false}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">State</InputLabel>\r\n                    <Select\r\n                        native\r\n                        value={state.code}\r\n                        onChange={handleChange}\r\n                        label=\"State\"\r\n                        inputProps={{\r\n                            name: 'State',\r\n                            id: 'outlined-age-native-simple',\r\n                        }}\r\n                    >\r\n                        {\r\n                            stateList.map(x => { return <option key={x.code} value={x.code}>{x.description}</option> })\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={submit}>\r\n                    Create\r\n</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupComponent;\r\n\r\n","import './HeaderComponent.css';\r\nimport React, { useContext } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { EventContext } from '../contextAPI/EventContext';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport SignupComponent from '../signup/signupComponent';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function HeaderComponent(prop) {\r\n    const { loginUserData } = useContext(EventContext);\r\n    const preventDefault = (event) => event.preventDefault();\r\n\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={11} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <div className='headerSection'>\r\n            <div className={classes.grow}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                            CRUD\r\n          </Typography>\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                value={prop.searchValue}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                                onChange={(e) => prop.searchHandler(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.grow} />\r\n                        <div>\r\n                            <Typography className={classes.root}>\r\n                                <Link to=\"/signup\" >\r\n                                    Signup\r\n      </Link>\r\n                                <Link to=\"/login\" >\r\n                                    Login\r\n                            </Link>\r\n                                <Link to=\"/viewUsers\" >\r\n                                    View\r\n                            </Link>\r\n                                <Link to=\"/sportify\" >\r\n                                    Sportify\r\n                            </Link>\r\n                            </Typography>\r\n                        </div>\r\n                        <div className={classes.sectionDesktop}>\r\n                            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                <Badge badgeContent={4} color=\"secondary\">\r\n                                    <MailIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={17} color=\"secondary\">\r\n                                    <NotificationsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <div className=\"userNameText\">\r\n                                {loginUserData.firstName} {loginUserData.lastName}\r\n                            </div>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className={classes.sectionMobile}>\r\n                            <IconButton\r\n                                aria-label=\"show more\"\r\n                                aria-controls={mobileMenuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMobileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <MoreIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {renderMobileMenu}\r\n                {renderMenu}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import './LoginComponent.css';\r\nimport React, { useContext, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { EventContext } from './../contextAPI/EventContext';\r\n\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '40ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst validateForm = errors => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(val => val.length > 0 && (valid = false));\r\n    return valid;\r\n};\r\n\r\nfunction LoginComponent() {\r\n    const classes = useStyles();\r\n    const [credentials, setCredentials] = useState({ UserName: '', Password: '' });\r\n    const [userNameError, setUserNameError] = useState({});\r\n    const [passwordError, setPasswordError] = useState({});\r\n\r\n    const { loginUserData, setloginUserData, users, addUser, handleClick, handleClose } = useContext(EventContext);\r\n\r\n    const checkFormValidation = () => {\r\n        const userNameErr = {};\r\n        const passwordErr = {};\r\n        let isValid = true;\r\n        if (!credentials.UserName) {\r\n            userNameErr.required = \"Username is required\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (credentials.UserName.trim().length < 2 || credentials.UserName.trim().length > 5) {\r\n            userNameErr.LengthError = \"Username should be between length 2 and 5 characters\";\r\n            isValid = false;\r\n        }\r\n        if (!credentials.UserName.trim().includes('@')) {\r\n            userNameErr.atTheRateError = \"Username should be contain @\";\r\n            isValid = false;\r\n        }\r\n        if (!credentials.Password) {\r\n            passwordErr.required = \"Password is required\";\r\n            isValid = false;\r\n        }\r\n        setUserNameError(userNameErr);\r\n        setPasswordError(passwordErr);\r\n        return isValid;\r\n    }\r\n\r\n    const submit = () => {\r\n        const valid = checkFormValidation();\r\n        if (!valid) {\r\n            return;\r\n        }\r\n        let result = _.find((users), (user) => {\r\n            if (user.userName == credentials.UserName && user.password == credentials.Password) {\r\n                return true;\r\n            }\r\n        });\r\n        if (result != undefined) {\r\n            setloginUserData({ id: result.id, firstName: result.firstName, lastName: result.lastName })\r\n            localStorage.setItem('currentUser', JSON.stringify(result));\r\n            handleClick(true, 'Success');\r\n        } else {\r\n            handleClick(false, 'Authentication failed Please try again');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        if (e.target.id === 'UserName') {\r\n            setCredentials({ ...credentials, UserName: e.target.value });\r\n        }\r\n        if (e.target.id === 'Password') {\r\n            setCredentials({ ...credentials, Password: e.target.value });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='border'>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField id=\"UserName\" label=\"UserName\" variant=\"outlined\" value={credentials.UserName} onChange={handleInputChange}\r\n                />\r\n                {\r\n                    Object.keys(userNameError).map(key => {\r\n                        return <Alert severity=\"error\" className='validationError' key={userNameError[key]}>{userNameError[key]}</Alert>\r\n                    })\r\n                }\r\n                <br />\r\n\r\n                <TextField id=\"Password\" label=\"Password\" variant=\"outlined\" value={credentials.Password} onChange={handleInputChange} />\r\n                {\r\n                    Object.keys(passwordError).map(key => {\r\n                        return <Alert severity=\"error\" className='validationError' key={passwordError[key]}>{passwordError[key]}</Alert>\r\n                    })\r\n                }\r\n                <br />\r\n                <Button variant=\"contained\" className='loginbtn' color=\"primary\" onClick={submit}>\r\n                    Login\r\n</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default LoginComponent;\r\n","const PageNotFoundComponent = ({ location }) => (\r\n    <div>\r\n        <h2>Page not found for <code>{location.pathname}</code></h2>\r\n    </div>\r\n);\r\n\r\nexport default PageNotFoundComponent;\r\n\r\n","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        // Display fallback UI\r\n        this.setState({ hasError: true });\r\n        // You can also log the error to an error reporting service\r\n       //  logErrorToMyService(error, info);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return <h1>Something went wrong.</h1>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","\r\nimport React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { EventContext } from '../contextAPI/EventContext';\r\nimport _ from 'lodash';\r\n\r\nfunction createData(id, firstName, lastName, userName, password) {\r\n    return { id, firstName, lastName, userName, password };\r\n}\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'id', numeric: true, disablePadding: true, label: 'Id' },\r\n    { id: 'firstName', numeric: false, disablePadding: false, label: 'First Name' },\r\n    { id: 'lastName', numeric: false, disablePadding: false, label: 'Last Name' },\r\n    { id: 'userName', numeric: false, disablePadding: false, label: 'User Name' },\r\n    { id: 'password', numeric: false, disablePadding: false, label: 'Password' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                        Users\r\n                    </Typography>\r\n                )}\r\n\r\n            {numSelected > 0 && (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function ViewUsersComponent(props) {\r\n    const { users, addUser } = useContext(EventContext);\r\n    const [rows, setRows] = React.useState(users);\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        let result;\r\n        if (props.searchValue) {\r\n            filterDate(props.searchValue);\r\n        } else {\r\n            setRows(users);\r\n        }\r\n    })\r\n\r\n    const filterDate = (searchedValue) => {\r\n        const filteredDate = _.filter(rows, function (item) {\r\n            if (item.firstName.trim().toLowerCase().includes(props.searchValue.trim().toLowerCase()) || item.lastName.trim().toLowerCase().includes(props.searchValue.trim().toLowerCase()) || item.userName.trim().toLowerCase().includes(props.searchValue.trim().toLowerCase())) {\r\n                return true;\r\n            }\r\n        });\r\n        setRows(filteredDate);\r\n    }\r\n\r\n\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.id);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.id)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.id}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                {row.id}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.firstName}</TableCell>\r\n                                            <TableCell align=\"right\">{row.lastName}</TableCell>\r\n                                            <TableCell align=\"right\">{row.userName}</TableCell>\r\n                                            <TableCell align=\"right\">{row.password}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: 53 * emptyRows }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[2, 3, 5]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","\r\nclass EndPoints {\r\n    BaseUrl = 'https://api.spotify.com/'\r\n    AuthCodeUrl = 'authorize?client_id=654c7484fce14022bd0ec15f605a0bd3&response_type=code&redirect_uri=http://localhost:3000/sportify&scope=user-read-private%20user-read-email&state=34fFs29kd09';\r\n    TokenUrl = 'api/token';\r\n    CategoriesUrl = 'https://api.spotify.com/v1/browse/categories?country=IN&limit=50';\r\n    Token = `BQBv-71Cuni-iWuZ_UMd73jNTdeURuRNeNkyXqQTQVUi2lT9t-L0Qm96BtrPMo5jntRMUO2MUZ-x_COQaEJAXbMgYyjHqwfAhe36uq4_XbP3n9J7_zJ_LleYxl-pV9tIiWNwkxco8yFi5DDyzmI8JYA8SKN8igfjEmqPEhvV7XiXIjb3EEWsuFSKGv9z4acG`;\r\n    PlayList = 'https://api.spotify.com/v1/browse/categories/cattegoryId/playlists?country=IN';\r\n}\r\nexport default EndPoints;\r\n\r\n","import axios from 'axios'\r\n\r\n\r\nexport const axiosApiInstance = axios.create();\r\n\r\n// Request interceptor for API calls\r\naxiosApiInstance.interceptors.request.use(\r\n    async config => {\r\n        config.headers = {\r\n            'Authorization': `Bearer ${sessionStorage.getItem('TokenInfo') === null ? \"demoooooo\" : (JSON.parse(sessionStorage.getItem('TokenInfo')))['token']}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        Promise.reject(error)\r\n    });\r\n\r\n// // Response interceptor for API calls\r\naxiosApiInstance.interceptors.response.use(response => {\r\n    return response;\r\n}, err => {\r\n    return new Promise((resolve, reject) => {\r\n        const originalReq = err.config;\r\n        if (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\r\n            originalReq.__isRetryRequest = true;\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n            myHeaders.append(\"Cookie\", \"__Host-device_id=AQDC0tJ-A0RMFGOtJ02giNDMfioSXzOLL3JKgbgI74Z9NBpVRlqf0WDC0NoRbmkYiaMjkQK1QQf1D1xXPcvwEiMJStkGkNQiGYc; sp_t=b8d3612b89cb15ca3696bccdf32b651b\");\r\n\r\n            var urlencoded = new URLSearchParams();\r\n            urlencoded.append(\"grant_type\", \"refresh_token\");\r\n            urlencoded.append(\"refresh_token\", \"AQDHIGsyxv5Wp8uKj7rtuBry-wWjXB_a9CnJxG-oolYUm9BSryUw5dUJe4kSzANBVn6aU4yFp3DLF5IFL58p0xg3tZewWxdVttVHBhhtbzW7MkC55s2SIWhNgLSOv4JfX2s\");\r\n            urlencoded.append(\"client_id\", \"654c7484fce14022bd0ec15f605a0bd3\");\r\n            urlencoded.append(\"client_secret\", \"80455513ed344fd5b8c96667ae6a6e8c\");\r\n\r\n            let res = fetch('https://accounts.spotify.com/api/token', {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: myHeaders,\r\n                redirect: 'follow',\r\n                referrer: 'no-referrer',\r\n                body: urlencoded,\r\n            }).then(res => res.json()).then(res => {\r\n                console.log(res);\r\n                sessionStorage.setItem('TokenInfo', JSON.stringify({ token: res.access_token, ref_token_exp_time: new Date(Date.now()).setTime(new Date(Date.now()).getTime() + 3600000) }));\r\n                originalReq.headers['Token'] = res.access_token;\r\n                originalReq.headers['Device'] = \"device\";\r\n                return axiosApiInstance(originalReq);\r\n            });\r\n            resolve(res);\r\n        }\r\n        return Promise.reject(err);\r\n    });\r\n});\r\n\r\nDate.prototype.addHours = function (h) {\r\n    this.setTime(this.getTime() + (h * 60 * 60 * 1000));\r\n    return this;\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Button from '@material-ui/core/Button';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { axiosApiInstance } from '../../HttpInterceptor/httpInterceptor';\r\nimport EndPoints from './../../Constants/endPoints';\r\nimport _ from 'lodash'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        background: 'black',\r\n        color: 'white',\r\n        width: '100%',\r\n        '&:hover': {\r\n            background: 'grey'\r\n        },\r\n    },\r\n    specialBtn: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        width: '100%'\r\n    },\r\n\r\n\r\n\r\n}));\r\n\r\nconst CategoriesComponent = (props) => {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(1);\r\n    const config = new EndPoints();\r\n    // const [token] = useState(config.Token);\r\n\r\n    const [allCategories, setAllCategories] = useState([]);\r\n    const [currentCategories, setCurrentCategories] = useState([]);\r\n    useEffect(() => {\r\n        getCategories();\r\n    }, []\r\n    );\r\n    const getCategories = () => {\r\n        axiosApiInstance.get(`${config.CategoriesUrl}`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                setAllCategories(response.data.categories.items);\r\n                setCurrentCategories(response.data.categories.items);\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            });\r\n    }\r\n\r\n    const handlePaginarionChange = (event, value) => {\r\n        setPage(value);\r\n        const startIndex = (value - 1) * 4;\r\n        const endIndex = (value * 4) <= allCategories.length ? value * 4 : allCategories.length;\r\n        const arr = _.slice(allCategories, startIndex, endIndex);\r\n        setCurrentCategories(arr);\r\n    };\r\n\r\n    return (<div className={classes.root}>\r\n        <Grid container spacing={2}>\r\n            {\r\n                currentCategories.length > 0 && currentCategories.map((item, index) => {\r\n                    return index < 4 && <Grid item xs={3} key={item.id}>\r\n                        <div>\r\n                            <Button\r\n                                className='cateBtn'\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={() => { props.handlePlayListChanges(item.id, item.name) }}\r\n                            >\r\n                                {item.name}\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                }\r\n                )\r\n            }\r\n\r\n            <Grid item xs={12}>\r\n                <Typography>Page: {page}</Typography>\r\n                <Pagination className='pagination' page={page} onChange={handlePaginarionChange} count={Math.ceil(allCategories.length / 4)} variant=\"outlined\" color=\"secondary\" />\r\n            </Grid>\r\n\r\n            <Grid item xs={3}>\r\n                <Button className={classes.specialBtn}>Featured-playlists</Button>\r\n                {/* https://api.spotify.com/v1/browse/featured-playlists?country=IN&limit=50 */}\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button className={classes.specialBtn}>New Release</Button>\r\n                {/* https://api.spotify.com/v1/browse/new-releases?country=IN */}\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button className={classes.specialBtn}>New Mashup</Button>\r\n                {/* https://api.spotify.com/v1/search?q=new%20mashup&type=track&market=IN*/}\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button className={classes.specialBtn}>Old Mashup</Button>\r\n                {/* https://api.spotify.com/v1/search?q=old%20mashup&type=track&market=IN */}\r\n            </Grid>\r\n        </Grid>\r\n    </div>)\r\n}\r\n\r\nexport default CategoriesComponent;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport _ from 'lodash';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport EndPoints from './../../Constants/endPoints';\r\nimport SongDetailCard from '../SongDetails/songDetailCard';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    useLocation\r\n} from \"react-router-dom\";\r\n\r\nimport CategoriesComponent from '../Categories/categoriesComponent';\r\n\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 220,\r\n        fontSize: theme.typography.pxToRem(12),\r\n        border: '1px solid #dadde9',\r\n    },\r\n}))(Tooltip);\r\n\r\nconst SportifyComponent = () => {\r\n    const [authCode, setAuthCode] = useState(new URLSearchParams(useLocation().search).get('code'));\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleTooltipClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleTooltipOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const config = new EndPoints();\r\n    const [baseUrl] = useState('https://accounts.spotify.com/');\r\n    const [apiBaseUrl] = useState('https://api.spotify.com/');\r\n    const playListcolumns = [\r\n        { field: 'description', headerName: 'Playlist Title', width: 400 },\r\n        { field: 'totalTracks', headerName: 'Tracks', width: 70 }\r\n    ];\r\n    const songsColumns = [\r\n        { field: 'id', headerName: 'No', width: 30 },\r\n        { field: 'name', headerName: 'Song', width: 300 },\r\n        { field: 'duration', headerName: 'Duration', width: 30 },\r\n    ];\r\n\r\n    const [playListRows, setPlayListRows] = useState([]);\r\n    const [categoriesOptions, setCategoriesOptions] = useState([]);\r\n    const [songsRows, setSongsRows] = useState([]);\r\n    const [selectedPlaylists, setSelectedPlaylists] = useState([]);\r\n\r\n    const [title, setTitle] = useState('');\r\n\r\n    const [sportifyToken, setSportifyToken] = useState('BQACvDj1023jyY3WvzKQQAM2a7yKj9HWEuUL5NM8VIAd6clP26HwD44KX9xqs5xrX4Cyf-N-a4F0n1fPMdUH1GYfjoxY98I5hxrSX7D4yQ_sfJzlHdxEnpXwPf4hdmUgcH0YbfftNTybVhO7dXV6pLAlRjdDGU5FBXa3UfsjFTqXlK7hgw');\r\n\r\n    const options = {\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n    }\r\n    const body = {\r\n        grant_type: 'authorization_code',\r\n        code: 'AQB6EcF58nyBWPeuSs_koktnFQ74C8pTv2UHj3ro6SyskV02JSlDkpM9qKGFDIy7fXbChfEvNtLwGbukm8jspu9PRUqFyVVIUgb7CfSlwBpRgJt0WOOVBiFDdtKxIX2Ldrbok-VyIDNkxc5TMMCYCtzut_ioOqxELVLEL51SvGQ538jrq-uT0PLtjhqaK1aMMbIQgOEI8VSwc1y1Qq-DVa6PhJCFCw',\r\n        redirect_uri: 'http://localhost:3000/sportify',\r\n        client_id: '654c7484fce14022bd0ec15f605a0bd3',\r\n        client_secret: '80455513ed344fd5b8c96667ae6a6e8c',\r\n    }\r\n\r\n    const getAuthCode = () => {\r\n        axios.get(`${baseUrl}${config.AuthCodeUrl}`\r\n        ).then(response => {\r\n\r\n            window.open(response.config.url, '_blank');\r\n\r\n            console.log(response)\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!authCode) {\r\n            getAuthCode();\r\n        }\r\n\r\n        // axios.post(`${baseUrl}${config.TokenUrl}`, qs.stringify(body), options\r\n        // ).then(response => {\r\n        //     console.log(response)\r\n        // }).catch(error => {\r\n        //     debugger\r\n        //     console.log(error.response)\r\n        // })\r\n        //  setCategoryDropdown(JSON.parse(localStorage.getItem(\"cate\")))\r\n        // axios.get(`${apiBaseUrl}${config.CategoriesUrl}`, { headers: { Authorization: `Bearer ${sportifyToken}` } })\r\n        //     .then(response => {\r\n        //         localStorage.setItem(\"cate\", JSON.stringify(response.data));\r\n        //         console.log(response.data);\r\n        //         setCategoryDropdown(response.data);\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         console.log('error ' + error);\r\n        //     });\r\n    }, []);\r\n\r\n    const setCategoryDropdown = (categories) => {\r\n        let categoryList = [];\r\n        // need to change the below object \r\n        categories.categories.items.map(item => {\r\n            const category = {\r\n                key: item.id,\r\n                text: item.name,\r\n                value: item.id,\r\n                image: { avatar: true, src: item.icons[0].url },\r\n            }\r\n            categoryList.push(category);\r\n\r\n        })\r\n        setCategoriesOptions(categoryList);\r\n    }\r\n    const handleCategoryChange = (event) => {\r\n        const id = _.find(categoriesOptions, ['text', event.target.textContent]).key;\r\n        getPlayListOptions(id);\r\n    }\r\n\r\n    const getPlayListOptions = (cattegoryId) => {\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.spotify.com/v1/browse/categories/${cattegoryId}/playlists?limit=50`, { headers: { Authorization: `Bearer ${sportifyToken}` } })\r\n            .then(response => {\r\n                console.log('plaulist ' + response);\r\n                setPlaylistRows(response.data.playlists);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            });\r\n    }\r\n\r\n\r\n    const setPlaylistRows = (playListData) => {\r\n        let playList = [];\r\n\r\n        playListData.items.map(x => {\r\n            const item = {\r\n                id: x.id,\r\n                description: x.description,\r\n                images: x.images[0].url,\r\n                totalTracks: x.tracks.total,\r\n                tracksUrl: x.tracks.href\r\n\r\n            }\r\n            playList.push(item);\r\n        })\r\n        setPlayListRows(playList);\r\n    }\r\n    const onChangePageHandler = (page) => {\r\n    }\r\n\r\n    const onRowSelect = (row) => {\r\n        // const re = selectedPlaylists;\r\n        // const result = _.find(selectedPlaylists, data.row.id);\r\n        // debugger;\r\n        if (row.isSelected) {\r\n            GetTracksAllTracks(row.data.tracksUrl, row.data.id);\r\n        }\r\n        else {\r\n            _.remove(songsRows, (x) => {\r\n                return x.playListId === row.data.id;\r\n            });\r\n            const data = songsRows\r\n            setSongsRows(data);\r\n        }\r\n    }\r\n    const GetTracksAllTracks = (trackURL, id) => {\r\n        axios.get(`${trackURL}`, { headers: { Authorization: `Bearer ${sportifyToken}` } })\r\n            .then(response => {\r\n                console.log('tracks ', response);\r\n                SetTracks(response.data.items, id)\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            });\r\n    }\r\n\r\n    const SetTracks = (items, id) => {\r\n        const songRows = [...songsRows];\r\n        items.map((x, index) => {\r\n            const track = {\r\n                id: index + 1,\r\n                artist: x.track.artists,\r\n                duration: millisToMinutesAndSeconds(x.track.duration_ms),\r\n                external_urls: x.track.external_urls,\r\n                href: x.track.href,\r\n                name: x.track.name,\r\n                popularity: x.track.popularity,\r\n                preview_url: x.track.preview_url,\r\n                playListId: id\r\n            }\r\n            songRows.push(track)\r\n        })\r\n        setSongsRows(songRows);\r\n    }\r\n    const millisToMinutesAndSeconds = (millis) => {\r\n        var minutes = Math.floor(millis / 60000);\r\n        var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n    // const setSelection = (data) => {\r\n    //     const res = _.differenceWith(selectedPlaylists, data.rowIds, _.isEqual)\r\n    //     let unCh = arr_diff(selectedPlaylists, data.rowIds);\r\n    //     if (data.rowIds.length > selectedPlaylists.length) {\r\n    //         console.log('new element is added')\r\n    //     } else {\r\n    //         console.log('deleted');\r\n    //     }\r\n    //     setSelectedPlaylists(data.rowIds);\r\n    // }\r\n\r\n    const arr_diff = (a1, a2) => {\r\n        var a = [], diff = [];\r\n        for (var i = 0; i < a1.length; i++) {\r\n            a[a1[i]] = true;\r\n        }\r\n        for (var i = 0; i < a2.length; i++) {\r\n            if (a[a2[i]]) {\r\n                delete a[a2[i]];\r\n            } else {\r\n                a[a2[i]] = true;\r\n            }\r\n        }\r\n        for (var k in a) {\r\n            diff.push(k);\r\n        }\r\n        return diff;\r\n    }\r\n    const onRowHoverHandler = (params) => {\r\n        setTitle(params.row.name);\r\n    }\r\n\r\n    const HtmlTooltip = withStyles((theme) => ({\r\n        tooltip: {\r\n            backgroundColor: '#f5f5f9',\r\n            color: 'rgba(0, 0, 0, 0.87)',\r\n            maxWidth: 220,\r\n            fontSize: theme.typography.pxToRem(12),\r\n            border: '1px solid #dadde9',\r\n        },\r\n    }))(Tooltip);\r\n\r\n    return (<div>\r\n        <CategoriesComponent />\r\n        {/* <div>\r\n            <Dropdown\r\n                placeholder='Select Category'\r\n                fluid\r\n                selection\r\n                options={categoriesOptions}\r\n                onChange={(e) => handleCategoryChange(e)}\r\n            />\r\n        </div>\r\n        <div style={{ height: 400, width: '45%' }}>\r\n            <DataGrid rows={playListRows} columns={playListcolumns} pageSize={5} checkboxSelection\r\n                onPageChange={(params) => {\r\n                    onChangePageHandler(params);\r\n                }} onRowSelected={(param) => { onRowSelect(param) }} />\r\n        </div>\r\n        <div style={{ height: 400, width: '50%' }}>\r\n            <DataGrid rows={songsRows} columns={songsColumns} pageSize={5} onPageChange={(params) => {\r\n                onChangePageHandler(params);\r\n            }} onRowHover={(params) => { onRowHoverHandler(params) }} />\r\n        </div>\r\n\r\n        <HtmlTooltip\r\n            title={\r\n                <React.Fragment>\r\n                    <Typography color=\"inherit\">Tooltip with HTML</Typography>\r\n                    <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\r\n                    {\"It's very engaging. Right?\"}\r\n                </React.Fragment>\r\n            }\r\n        >\r\n            <Button >HTML</Button>\r\n        </HtmlTooltip> */}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SportifyComponent","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './playListComponent.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LibraryMusic from '@material-ui/icons/LibraryMusic'\r\nimport Carousel from 'react-elastic-carousel';\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         width: 150,\r\n//         height: 200,\r\n//         border: '1px solid',\r\n//         '&:hover': {\r\n//             width: 140,\r\n//             height: 190,\r\n//         }\r\n\r\n//     },\r\n//     media: {\r\n//         // height: 140,\r\n//     },\r\n\r\n// }));\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 1, itemsToScroll: 1 },\r\n    { width: 550, itemsToShow: 4, itemsToScroll: 2 },\r\n    { width: 768, itemsToShow: 6, itemsToScroll: 2 },\r\n    { width: 1200, itemsToShow: 8, itemsToScroll: 2 }\r\n];\r\n\r\nclass PlayListComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return (<React.Fragment key={this.props.title}>\r\n            <div key={this.props.title}>\r\n                <div className='playListTitle'>\r\n                    {this.props.title}\r\n                </div>\r\n                <Carousel breakPoints={breakPoints}>\r\n                    {this.props.items.length > 0 && this.props.items.map((item, index) => {\r\n                        return <Card key={item.id} className={'imgCard'} onClick={() => { this.props.handlePlayListChanges(item) }}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    image={item.album?.images[0]?.url ? item.album?.images[0]?.url : item.images[0]?.url}\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                        {item.name} {item.tracks?.total && (item.tracks?.total)}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n\r\n                        </Card>\r\n                    })\r\n                    }\r\n                </Carousel>\r\n            </div>\r\n        </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n// const PlayListComponent = (props) => {\r\n//     const classes = useStyles();\r\n//     debugger;\r\n\r\n//     useEffect(() => {\r\n//     }, [])\r\n\r\n//     return (<React.Fragment key={props.title}>\r\n\r\n//         <div className='playListTitle'>\r\n//             {props.title}\r\n//         </div>\r\n//         <Carousel breakPoints={breakPoints}>\r\n//             {props.items.length > 0 && props.items.map((item, index) => {\r\n//                 return <Card className={classes.root} onClick={() => { props.handlePlayListChanges(item) }}>\r\n//                     <CardActionArea>\r\n//                         <CardMedia\r\n//                             component=\"img\"\r\n//                             className={classes.media}\r\n//                             image={item.album?.images[0]?.url ? item.album?.images[0]?.url : item.images[0]?.url}\r\n//                             title=\"Contemplative Reptile\"\r\n//                         />\r\n//                         <CardContent>\r\n//                             <Typography gutterBottom variant=\"h6\" component=\"h6\">\r\n//                                 {item.name} {item.tracks?.total && (item.tracks?.total)}\r\n//                             </Typography>\r\n//                         </CardContent>\r\n//                     </CardActionArea>\r\n\r\n//                 </Card>\r\n//             })\r\n//             }\r\n//         </Carousel>\r\n//     </React.Fragment>)\r\n\r\n// }\r\nexport default React.memo(PlayListComponent);","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './SongsListComponent.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PlayCircleOutline from '@material-ui/icons/PlayCircleOutline'\r\nimport Favorite from '@material-ui/icons/Favorite'\r\nimport Schedule from '@material-ui/icons/Schedule'\r\nimport People from '@material-ui/icons/People'\r\nimport axios from 'axios';\r\nimport EndPoints from './../../Constants/endPoints';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        // height: 700,\r\n        border: '1px solid'\r\n\r\n    },\r\n    songsPaper: {\r\n        padding: theme.spacing(1),\r\n        // textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        // height: 30,\r\n        border: '1px solid'\r\n\r\n    },\r\n}));\r\nconst SongsListComponent = (props) => {\r\n    const classes = useStyles();\r\n    const config = new EndPoints();\r\n    // const [tracks, setTracks] = useState({ playlistData: {}, tracksData: {} });\r\n\r\n    useEffect(() => {\r\n        // handlePlayListChange('https://api.spotify.com/v1/playlists/37i9dQZF1DXdSavJjIP6Fb/tracks');\r\n    }, [])\r\n\r\n    // const handlePlayListChange = (playlist) => {\r\n    //     // setSelectedCat(cattegoryId);\r\n    //     axios.get(`${playlist}`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n    //         .then(response => {\r\n    //             setTracks({ tracksData: response.data });\r\n    //             //  prop = { tracksData: response.data };\r\n    //             // setTracks(...tracks, { playlistData: {}, tracksData: response.data });\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log('error ' + error);\r\n    //         });\r\n    // }\r\n\r\n\r\n\r\n    const millisToMinutesAndSeconds = (millis) => {\r\n        var minutes = Math.floor(millis / 60000);\r\n        var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={2}>\r\n                        <Paper className={classes.paper}>\r\n                            {/* <img src={prop.currentPlaylistTracks?.images[0]?.url} className=\"card-img-top\" alt=\"...\"></img> */}\r\n                            <img src={props.currentPlaylistTracks?.playlistData?.images[0].url} className=\"card-img-top\" alt=\"...\"></img>\r\n                        </Paper>\r\n                        {props.currentPlaylistTracks?.playlistData?.name} {props.currentPlaylistTracks?.playlistData?.tracks?.total}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.songsPaper}>\r\n                            <span className={'trackNo'}>No</span>\r\n                            {/* play btn */}\r\n                            <span className={'trackLikes'}> <Favorite /></span>\r\n                            <span className={'trackTitle'}>Title</span>\r\n                            <span className={'trackArtist'}>Artist</span>\r\n                            <span className={'trackDuration'}><Schedule /></span>\r\n                        </Paper>\r\n                    </Grid>\r\n                    {\r\n                        props.currentPlaylistTracks.tracksData.items?.length > 0 && props.currentPlaylistTracks.tracksData.items.map((track, index) => {\r\n                            return props.currentPlaylistTracks.playlistData.type == 'playlist' ? (<Grid item xs={12} className={'rowStyle'} key={track.id}>\r\n                                <Paper className={classes.songsPaper}>\r\n                                    <span className={'trackNoValue'}>{index + 1}</span>\r\n                                    {/* play btn */}\r\n                                    <span className={'trackLikesValue'}>{track.track?.popularity}<Favorite className={'favorite'} /></span>\r\n                                    <span className={'trackTitleValue'}>{track.track?.name}</span>\r\n                                    <span className={'trackArtistValue'}>{track.track.artists[0].name, track.track.artists[1]?.name}</span>\r\n                                    <span className={'trackDurationValue'}>{millisToMinutesAndSeconds(track?.track?.duration_ms)}</span>\r\n                                    <Button onClick={() => { props.onTrackSelect(track.track) }} color=\"primary\">\r\n                                        Play</Button>\r\n                                </Paper>\r\n                            </Grid>) : (\r\n                                    <Grid item xs={12} className={'rowStyle'} key={track.id}>\r\n                                        <Paper className={classes.songsPaper}>\r\n                                            <span className={'trackNoValue'}>{index + 1}</span>\r\n                                            {/* play btn */}\r\n                                            <span className={'trackLikesValue'}>{track?.popularity && track?.popularity}<Favorite className={'favorite'} /></span>\r\n                                            <span className={'trackTitleValue'}>{track.name}</span>\r\n                                            <span className={'trackArtistValue'}>{track.artists[0]?.name, track.artists[1]?.name}</span>\r\n                                            <span className={'trackDurationValue'}>{millisToMinutesAndSeconds(track?.duration_ms)}</span>\r\n                                            <Button onClick={() => { props.onTrackSelect(track) }} color=\"primary\">\r\n                                                Play</Button>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                )\r\n\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default SongsListComponent;","\r\nimport React, { useEffect, useState } from 'react';\r\nimport './searchBtnComponent.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport SearchSharp from '@material-ui/icons/SearchSharp'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport _ from 'lodash'\r\n\r\nimport axios from 'axios'\r\nimport EndPoints from './../../Constants/endPoints';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    textField: {\r\n        width: '25ch',\r\n    },\r\n}));\r\n\r\n\r\nconst SearchBtnComponent = (props) => {\r\n    const classes = useStyles();\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [searchResult, setSearchResult] = useState({});\r\n    const config = new EndPoints();\r\n    const [showLoading, setShowLoading] = React.useState(false);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setSearchResult({});\r\n        setSearchValue(event.target.value);\r\n        if (event.target.value.trim().length > 2) {\r\n            setShowLoading(true);\r\n            getSearchResult();\r\n        } else {\r\n            setShowLoading(false);\r\n            setSearchResult({});\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const getSearchResult = () => {\r\n        setSearchResult({});\r\n        axios.get(`https://api.spotify.com/v1/search?q=${searchValue}&type=album,artist,track&limit=10`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                setShowLoading(false);\r\n                const item = _.unionBy(response.data?.albums?.items, response.data?.tracks?.items, response.data?.artists?.items);\r\n                setSearchResult(item);\r\n            })\r\n            .catch((error) => {\r\n                setShowLoading(false);\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n\r\n    const handleSearchItemSelect = (item) => {\r\n        props.handlePlayListChanges(item)\r\n    }\r\n\r\n\r\n    return (<Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n            <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-amount\">Search Song, Artist</InputLabel>\r\n                <OutlinedInput\r\n                    id=\"outlined-adornment-amount\"\r\n                    value={searchValue}\r\n                    onChange={(e) => { handleChange(e) }}\r\n                    startAdornment={<InputAdornment position=\"start\"><SearchSharp /></InputAdornment>}\r\n                    labelWidth={120}\r\n                    endAdornment={<InputAdornment position=\"start\">{showLoading && <i className=\"fa fa-spinner fa-spin\"></i>}</InputAdornment>}\r\n                    onBlur={() => { setSearchValue(''); }}\r\n                />\r\n            </FormControl>\r\n            {searchResult.length > 0 && <List dense className={classes.root}>\r\n                {searchResult.map((item, index) => {\r\n                    return (\r\n                        <ListItem key={index} button onClick={() => handleSearchItemSelect(item)} className='searchResultRow'>\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    alt={`Avatar n°${index + 1}`}\r\n                                    src={item?.images?.length > 0 && item?.images[2]?.url}\r\n                                    src={item?.album?.images?.length > 0 && item?.album?.images[2]?.url}\r\n                                //   src=''\r\n                                />\r\n                            </ListItemAvatar>\r\n                            <ListItemText id={item.id} primary={item.name} />\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n            </List>\r\n            }\r\n        </Grid>\r\n    </Grid>)\r\n}\r\n\r\nexport default SearchBtnComponent;","import React, { useState, useEffect } from 'react'\r\nimport EndPoints from './../../Constants/endPoints';\r\nimport _ from 'lodash';\r\n// import configData from \"../../../public/Data/app.Config.json\";\r\n\r\nimport CategoriesComponent from '../Categories/categoriesComponent';\r\nimport PlayListComponent from '../playLists/playListComponent';\r\nimport SongsListComponent from '../SongsList/SongsListComponent';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SearchBtnComponent from './../searchBaar/searchBtnComponent';\r\nimport { axiosApiInstance } from '../../HttpInterceptor/httpInterceptor';\r\nimport axios from 'axios'\r\n\r\n\r\nconst MusicComponent = () => {\r\n    const [selectedCat, setSelectedCat] = useState('');\r\n    const [selectedCatItems, setSelectedCatItems] = useState({ items: [], cateName: '' });\r\n    const [allPlaylistData, setAllPlaylistData] = useState([]);\r\n    const [tracks, setTracks] = useState({ playlistData: {}, tracksData: {} });\r\n    const [nowPlaying, setNowPlaying] = useState([]);\r\n\r\n\r\n    const config = new EndPoints();\r\n\r\n    const handleCategoryChange = (cattegoryId, categoryName) => {\r\n        setSelectedCat(cattegoryId);\r\n        axiosApiInstance.get(`${config.PlayList.replace('cattegoryId', cattegoryId)}`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                setSelectedCatItems({ items: response.data.playlists.items, cateName: categoryName });\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            });\r\n    }\r\n    const handlePlayListChange = (playlist) => {\r\n        // setSelectedCat(cattegoryId);\r\n        if (playlist.type === 'track') {\r\n            onTrackSelect(playlist);\r\n            return;\r\n        }\r\n        let url = `https://api.spotify.com/v1/${playlist.type}s/${playlist.id}`;\r\n        url = playlist.type == 'artist' ? `${url}/top-tracks?country=IN` : `${url}/tracks`\r\n        // url = playlist.type === \"playlist\" ? playlist.tracks.href : playlist.href;\r\n        axiosApiInstance.get(`${url}`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                if (playlist.type == 'artist') {\r\n                    setTracks({ playlistData: playlist, tracksData: { items: response.data.tracks } });\r\n                } else {\r\n                    setTracks({ playlistData: playlist, tracksData: response.data });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            });\r\n    }\r\n    // const handlePlayListChange = (playlist) => {\r\n    //     debugger\r\n    //     // setSelectedCat(cattegoryId);\r\n    //     axios.get(`${playlist.tracks.href}`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n    //         .then(response => {\r\n    //             setTracks({ playlistData: playlist, tracksData: response.data });\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log('error ' + error);\r\n    //         });\r\n    // }\r\n    useEffect(() => {\r\n        getPanjabiSongs();\r\n        getTopTracks()\r\n        getMostViewSongs();\r\n        const id = setInterval(async () => {\r\n            clearTimeout(id);\r\n            getcurrentYearSongs();\r\n            // getHeartBreakSongs();\r\n            getFeaturedPlayList();\r\n            marathiSongs();\r\n            getRepriseSongs();\r\n        }, 30000);\r\n\r\n        // getPanjabiTracks(); // issue\r\n        //    getMostTrendingSongs(); //issue\r\n        //  getNewReleaseData(); songs are not good\r\n        //  getMashupSongs(); // preview songs working \r\n        //  marathiSongs(); // working  checked\r\n        // getTopTracks();\r\n        // //   getSadSongs(); // running but songs are not proper\r\n        // getMostViewSongs();\r\n        // getcurrentYearSongs();\r\n        // getHeartBreakSongs();\r\n        // getFeaturedPlayList();\r\n        // getPanjabiSongs();\r\n        //  getRepriseSongs();\r\n        // handlePlayListChange('https://api.spotify.com/v1/playlists/37i9dQZF1DXdSavJjIP6Fb/tracks'); // issue\r\n    }, [])\r\n\r\n    const getRepriseSongs = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/search?q=reprise&type=track%2Calbum&limit=50`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'Reprise songs', playListItems: response.data.tracks.items }\r\n                // allPlaylistData.push(obj);\r\n                // setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n\r\n    const getNewReleaseData = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/browse/new-releases?country=IN`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'albums', playListItems: response.data.albums.items }\r\n                // allPlaylistData.push(obj);\r\n                // setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n\r\n    const getPanjabiTracks = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/playlists/37i9dQZF1DX5baCFRgbF3x/tracks`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'Panjabi tracks', playListItems: response.data.items }\r\n                // allPlaylistData.push(obj);\r\n                // setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n\r\n    const getcurrentYearSongs = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/search?q=year%3A2020&type=track%2Calbum&limit=50`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: '2020', playListItems: response.data.albums.items }\r\n                // allPlaylistData.push(obj);\r\n                // setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    }\r\n    const marathiSongs = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/browse/categories/marathi/playlists?country=IN`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'Marathi Playlist', playListItems: response.data.playlists.items }\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n    const getMostTrendingSongs = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/browse/categories/pop/playlists?country=IN`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'Trending Songs', playListItems: response.data.playlists.items }\r\n                // allPlaylistData.push(obj);\r\n                // setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n\r\n    const getTopTracks = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/me/top/tracks`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'My Top Tracks', playListItems: response.data.items }\r\n                // allPlaylistData.push(obj);\r\n                // setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n    const getHeartBreakSongs = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/search?q=Bollywood%20Heartbreak&type=track%2Calbum&limit=50`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'Heartbreak songs', playListItems: response.data.tracks.items }\r\n                // allPlaylistData.push(obj);\r\n                // setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n    const getSadSongs = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/search?q=sad&type=track%2Calbum&limit=50`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'Sad songs', playListItems: response.data.tracks.items }\r\n                // allPlaylistData.push(obj);\r\n                // setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n    const getMashupSongs = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/search?q=mashup&type=track%2Calbum&limit=50`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'Mashup albums', playListItems: response.data.albums.items }\r\n                // allPlaylistData.push(obj);\r\n                // setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n\r\n\r\n    const getMostViewSongs = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/search?q=MostView&type=album`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'Most viewed albums', playListItems: response.data.albums.items }\r\n                // allPlaylistData.push(obj);\r\n                // setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n\r\n    const getPanjabiSongs = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/browse/categories/punjabi/playlists?country=IN&limit=50`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'Panjabi', playListItems: response.data.playlists.items }\r\n                // allPlaylistData.push(obj);\r\n                // setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            })\r\n    };\r\n\r\n    const getFeaturedPlayList = () => {\r\n        axiosApiInstance.get(`https://api.spotify.com/v1/browse/featured-playlists?country=IN`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n            .then(response => {\r\n                const obj = { key: Math.floor(Math.random() * (999 - 100 + 1) + 100), playListTitle: 'Featured Playlists', playListItems: response.data.playlists.items }\r\n                //   allPlaylistData.push(obj);\r\n                //  setAllPlaylistData([...allPlaylistData, obj]);\r\n                setAllPlaylistData(allPlaylistData => [...allPlaylistData, obj]);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error ' + error);\r\n            });\r\n    }\r\n    // const getAllPlaylistData = () => {\r\n    //     axios.get(`https://api.spotify.com/v1/browse/new-releases?country=IN`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n    //         .then(response => {\r\n    //             console.log('new release', response.data.albums.items);\r\n    //             const obj = { playListTitle: 'albums', playListItems: response.data.albums.items }\r\n    //             setAllPlaylistData([...allPlaylistData, obj]);\r\n    //             debugger\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log('error ' + error);\r\n    //         });\r\n    //     axios.get(`https://api.spotify.com/v1/browse/featured-playlists?country=IN&limit=50`, { headers: { Authorization: `Bearer ${config.Token}` } })\r\n    //         .then(response => {\r\n    //             const obj = { playListTitle: 'playlists', playListItems: response.data.playlists.items }\r\n    //             setAllPlaylistData([...allPlaylistData, obj]);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log('error ' + error);\r\n    //         });\r\n    //     console.log('allPlaylistData', allPlaylistData);\r\n    // };\r\n\r\n    const onTrackSelect = (track) => {\r\n        setNowPlaying(track);\r\n        // if (document.getElementsByClassName('b8 b9 ba ao bb bc bd be bf bg bh bi bj').length > 0) {\r\n        //     document.getElementsByClassName('b8 b9 ba ao bb bc bd be bf bg bh bi bj')[0].click()\r\n        // }\r\n        // setRandom(random + 1);\r\n        // document.getElementsByClassName('d8 d9 da db')[0].style.display = 'none'\r\n        //  playMusicButtonClick();\r\n\r\n    }\r\n    const playMusicButtonClick = () => {\r\n        console.log('start');\r\n        setTimeout(() => {\r\n            if (document.getElementsByClassName('b8 b9 ba ao bb bc bd be bf bg bh bi bj').length > 0) {\r\n                document.getElementsByClassName('b8 b9 ba ao bb bc bd be bf bg bh bi bj')[0].click()\r\n            }\r\n        }, 10000);\r\n        console.log('end');\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <SearchBtnComponent handlePlayListChanges={handlePlayListChange} />\r\n            <CategoriesComponent handlePlayListChanges={handleCategoryChange} />\r\n            {\r\n                selectedCatItems.items.length > 0 && <PlayListComponent key={selectedCatItems.cateName} title={selectedCatItems.cateName} items={selectedCatItems.items} handlePlayListChanges={handlePlayListChange} />\r\n            }\r\n            {/* {\r\n                allPlaylistData.length > 0 && <PlayListComponent key='' title={'PlayList'} items={allPlaylistData[0]} handlePlayListChange={handlePlayListChange} />\r\n            } */}\r\n            <div>\r\n                {\r\n                    allPlaylistData.length > 0 && allPlaylistData.map(item => {\r\n                        // return item\r\n                        return <PlayListComponent key={item.playListTitle} title={item.playListTitle} items={item.playListItems} handlePlayListChanges={handlePlayListChange} />\r\n                    }\r\n                    )\r\n                }\r\n                {\r\n                    // <SongsListComponent onTrackSelect={onTrackSelect} />\r\n                    tracks.tracksData?.items?.length > 0 && <SongsListComponent key={tracks.playlistData.id} currentPlaylistTracks={tracks} onTrackSelect={onTrackSelect} />\r\n                }\r\n                {\r\n                    nowPlaying?.id && <iframe id={'iFrameId'} src={`https://open.spotify.com/embed/track/${nowPlaying?.id}`} width=\"1200\" height=\"80\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\r\n                }\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MusicComponent;","import './App.css';\nimport HeaderComponent from './component/header/HeaderComponent';\nimport LoginComponent from './component/login/LoginComponent';\nimport { EventContextProvider } from './component/contextAPI/EventContext';\nimport PageNotFoundComponent from './component/pageNotFound/pageNotFoundComponent';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport SignupComponent from './component/signup/signupComponent';\nimport { Container } from '@material-ui/core';\nimport ErrorBoundary from './component/ErrorBoundary';\nimport ViewUsersComponent from './component/ViewUsers/viewUsersComponent';\nimport SportifyComponent from './component/sportify/sportifyComponent';\nimport MusicComponent from './component/music/musicComponent';\nimport { useState } from 'react';\n\nfunction App() {\n  const [searchValue, setSearchValue] = useState('');\n  // code for subling component communication\n\n  const searchHandler = (value) => {\n    setSearchValue(value);\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <EventContextProvider>\n          <ErrorBoundary>\n            <HeaderComponent searchValue={searchValue} searchHandler={searchHandler} />\n          </ErrorBoundary>\n          <Container maxWidth=\"lg\">\n            <Switch>\n              <Route path=\"/signup\">\n                <ErrorBoundary>\n                  <SignupComponent />\n                </ErrorBoundary>\n              </Route>\n              <Route path=\"/login\">\n                <ErrorBoundary>\n                  <LoginComponent />\n                </ErrorBoundary>\n              </Route>\n              <Route\n                exact\n                path=\"/viewUsers\">\n                <ErrorBoundary>\n                  <ViewUsersComponent searchValue={searchValue} />\n                </ErrorBoundary>\n              </Route>\n              <Route\n                exact\n                path=\"/sportify\">\n                <ErrorBoundary>\n                  {/* <SportifyComponent/> */}\n                  <MusicComponent />\n                </ErrorBoundary>\n              </Route>\n              <Route\n                exact\n                path=\"/\">\n                <ErrorBoundary>\n                  <LoginComponent />\n                </ErrorBoundary>\n              </Route>\n              <Route component={PageNotFoundComponent} />\n            </Switch>\n          </Container>\n        </EventContextProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}